openapi: 3.0.3
info:
  title: Pine Flag Implementation API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.0.1
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  x-model-guide: https://github.com/open-traffic-generator/models/blob/master/MODEL-GUIDE.md
servers:
  - url: /
paths:
  /set_tcp_port:
    post:
      tags:
        - Configuration
      operationId: set_tcp_port
      description: |-
        For test purpose only the TcpPort is passed in. This is only used for the   DummyPort app.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.SetTcpPort"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /init_request:
    post:
      tags:
        - Configuration
      operationId: init_request
      description: |-
        The InitRequest() method must be called by the client for each new connection, and tells the server which version of the interface the client is expecting to use. The server will reply with the version of the interface it is providing.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.InitRequest"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.InitRequest"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /restart:
    post:
      tags:
        - Configuration
      operationId: restart
      description: |-
        On PF IxVM, it allows the client to restart ixvm.
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /start_debug_session:
    post:
      tags:
        - Configuration
      operationId: start_debug_session
      description: |-
        UserName :IxNewtork session username which identifies IxNetwork process which is trying to use PFDebug Interceptor. Depending on the running mode of interceptor, second IxNetwork connections to same interceptor might be discarded; PortListInfo: Sends a list of unique port ids and corresponding topology/connection info to be used by PFDebug interceptor. If a config will be sent to a port id  on which StartDebugSession was  not called, that config will not be forwarded to the appropriate  port. PortListInfoWithUniqueId: List containing all the ports from PortListInfo, but for every port in PortListInfo there is also a unique identifier attached, which need to be used  further in stream configuration APIs. InterceptorInfo: Structure containing :  -running mode of Interceptor;  -a string containing username(s) that is/are currently using the Interceptor. In case multiple clients are using Interceptor,  it will return all users that are connected to Interceptor, separated by ";".
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.StartDebugSession"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.StartDebugSession"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /stop_debug_session:
    post:
      tags:
        - Configuration
      operationId: stop_debug_session
      description: |-
        UserName :IxNewtork session username to identify IxNetwork process which is trying to use PFDebug Interceptor. Depending on the running mode of interceptor, second IxNetwork connections to same interceptor might be discarded; PortIdList: Sends a list of unique port ids to be removed from PFDebug Interceptor. If a config will be sent to a port on which StopDebugSession was called, that config will not be forwarded to the appropriate  port. InterceptorInfo: Structure containing :  -running mode of Interceptor;  -a string containing username(s) that is/are currently using the Interceptor. In case multiple clients are using Interceptor,  it will return all users that are connected to Interceptor, separated by ";".
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.StopDebugSession"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.StopDebugSession"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /feature_request:
    post:
      tags:
        - Configuration
      operationId: feature_request
      description: |-
        The FeatureRequest() method allows the client to query the features supported by the application. The response will always include the features that are applicable to the entire card, in addition to the features for the specific ports. The method replies with a JSON-formatted string representing the features.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.FeatureRequest"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.FeatureRequest"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /set_user_info:
    post:
      tags:
        - Configuration
      operationId: set_user_info
      description: |-
        Sets the user information for this session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.SetUserInfo"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /get_owner:
    get:
      tags:
        - Configuration
      operationId: get_owner
      description: |-
        Returns the current owner of the port. Owner is empty if port is not in use.
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.GetOwner"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /take_ownership:
    post:
      tags:
        - Configuration
      operationId: take_ownership
      description: |-
        Takes ownership of the port. Ownership can only be taken if not already owned by a different user, unless force is set, in which case ownership can be taken away.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.TakeOwnership"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /clear_ownership:
    post:
      tags:
        - Configuration
      operationId: clear_ownership
      description: |-
        Clear ownership of the port. Ownership can only be cleared if it was previously taken by the same user. If force is set, no check will be performed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ClearOwnership"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /subscribe_event:
    post:
      tags:
        - Configuration
      operationId: subscribe_event
      description: |-
        The SubscribeEvent() method can be called by the client to subscribe to event notifications from the server regarding the ports in PortIdList, and thus implement the Observer pattern.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.SubscribeEvent"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /unsubscribe_event:
    post:
      tags:
        - Configuration
      operationId: unsubscribe_event
      description: |-
        The UnsubscribeEvent() method can be called by the client to unsubscribe from event notifications from the server, and thus implement the Observer pattern.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.UnsubscribeEvent"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_port:
    post:
      tags:
        - Configuration
      operationId: configure_port
      description: |-
        The ConfigurePort() method can be called by the client to configure the physical receive and transmit characteristics of the port. For a TX traffic implementation, please use ConfigurePortBasic instead which passes stripped down stream-centric data parameters. Use either ConfigurePort or ConfigurePortBasic for the port -- Do not use both.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigurePort"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_port_basic:
    post:
      tags:
        - Configuration
      operationId: configure_port_basic
      description: |-
        The ConfigurePortBasic() method can be called by the client to configure the physical characteristics of the port. The  ConfigurePortBasic method is a Streams-centric subset of the  ConfigurePort method and should be used INSTEAD of ConfigurePort if the PCPU is solely being used for TX traffic configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigurePortBasic"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /prepare_for_start_tx:
    post:
      tags:
        - Configuration
      operationId: prepare_for_start_tx
      description: |-
        The PrepareForStartTx() method must be called prior to starting traffic and tells the port to make final preparations. Set IsTransmitting to true when port is already transmitting and PrepareForStartTx() is called just prior to ClearStats()
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.PrepareForStartTx"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_capture:
    post:
      tags:
        - Configuration
      operationId: configure_capture
      description: |-
        The ConfigureCapture() method allows the client to configure the port to capture packets. This method must only be called when capture is not running. Once configured, capture may be started by calling StartCapture(). The client application can configure capture for RX/TX or both. CaptureConfigurationList can contain up to 2 elements (when the settings for RX differ from those of TX) or just one configuration if only one direction is configured (RX or TX) or if both directions use the same configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigureCapture"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /start_capture:
    post:
      tags:
        - Configuration
      operationId: start_capture
      description: |-
        Once the capture subsystem is configured, StartCapture() method triggers the subsystem to begin capturing packets.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.StartCapture"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /stop_capture:
    post:
      tags:
        - Configuration
      operationId: stop_capture
      description: |-
        Once the capture subsystem has started capturing packets, the StopCapture() method triggers the subsystem to stop capturing packets. Captured packets may be retrieved once capture is stopped.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.StopCapture"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /get_capture_packet_count:
    post:
      tags:
        - Configuration
      operationId: get_capture_packet_count
      description: |-
        The GetCapturePacketCount() method returns the number of packets captured. Depending on the   direction chosen (Rx/Tx/both) a list of PacketCount structs will be returned: a list of one   element for kRx/kTx direction and a list of two elements when kBoth is chosen for direction.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.GetCapturePacketCount"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.GetCapturePacketCount"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /get_capture_status:
    post:
      tags:
        - Configuration
      operationId: get_capture_status
      description: |-
        The GetCaptureStatus() method returns information about the capture. Depending on the   direction chosen (Rx/Tx/both) a list of status structs will be returned: a list of one   element for kRx/kTx direction and a list of two elements when kBoth is chosen for direction.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.GetCaptureStatus"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.GetCaptureStatus"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /retrieve_capture:
    post:
      tags:
        - Configuration
      operationId: retrieve_capture
      description: |-
        The RetrieveCapture() method allows the client to fetch the packets captured on a particular port. The method will return the retrieved packets, but the server will return no more than the specified number of records beginning at the specified captured startIndex. The format of the packets retrieved will be based on the retrival options: pcap/raw, micro/nano second precision. It is entirely possible that the server will return far less data than is requested to avoid consuming too many CPU cycles or network bandwidth. The method will never return more than 1MB of data at a time.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.RetrieveCapture"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.RetrieveCapture"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /start_latency:
    post:
      tags:
        - Configuration
      operationId: start_latency
      description: |-
        Triggers the subsystem to begin latency measurements.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.StartLatency"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /stop_latency:
    post:
      tags:
        - Configuration
      operationId: stop_latency
      description: |-
        Stops latency measurements.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.StopLatency"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /clear_latency:
    post:
      tags:
        - Configuration
      operationId: clear_latency
      description: |-
        Clears latency measurements.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ClearLatency"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /clear_latency_for_selected_pgi_ds:
    post:
      tags:
        - Configuration
      operationId: clear_latency_for_selected_pgi_ds
      description: |-
        Clears latency measurements for a set of PGIDs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ClearLatencyForSelectedPGIDs"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /clear_timestamp:
    post:
      tags:
        - Configuration
      operationId: clear_timestamp
      description: |-
        Clears First/Last Time Stamp in DRAM statistics.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ClearTimestamp"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /set_rx_latency:
    post:
      tags:
        - Configuration
      operationId: set_rx_latency
      description: |-
        Config the packet group engine.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.SetRxLatency"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /set_tx_rx_sync_interval:
    post:
      tags:
        - Configuration
      operationId: set_tx_rx_sync_interval
      description: |-
        Configure interval of TxRxSync engine only.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.SetTxRxSyncInterval"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_pcpu_filters:
    post:
      tags:
        - Configuration
      operationId: configure_pcpu_filters
      description: |-
        Configure the PCPU filters.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigurePCPUFilters"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /get_current_server_time:
    get:
      tags:
        - Configuration
      operationId: get_current_server_time
      description: |-
        Get the current time (on master port). Clients must then calculate a future time for pulsing based on it.
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.GetCurrentServerTime"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /get_ntp_state:
    get:
      tags:
        - Configuration
      operationId: get_ntp_state
      description: |-
        Get the current state of the NTP server.
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.GetNTPState"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /set_ntp_master_on_ntp_client:
    post:
      tags:
        - Configuration
      operationId: set_ntp_master_on_ntp_client
      description: |-
        Configures the NTP client to use the specified NTP server for time synchronization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.setNTPMasterOnNTPClient"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /set_ntp_master_as_self:
    post:
      tags:
        - Configuration
      operationId: set_ntp_master_as_self
      description: |-
        Configures a machine to act as the NTP server used by others for time synchronization.
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /lock_pulse:
    post:
      tags:
        - Configuration
      operationId: lock_pulse
      description: |-
        Lock the pulse generating mechanism in preparation for arming and sending pulses. Clients must call this before arming any of the features for synchronisation.
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /arm_pulse:
    post:
      tags:
        - Configuration
      operationId: arm_pulse
      description: |-
        Arm the pulse system to carry out the list of actions when the next pulse is received.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ArmPulse"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /unlock_pulse:
    post:
      tags:
        - Configuration
      operationId: unlock_pulse
      description: |-
        Atomically unlock the pulse generating mechanism, and optionally send a pulse no later than the specified UTCTime. Implementations which are synchronised to UTC will send the pulse at the specified time, whereas implementations that are not synchronised to UTC are permitted to send the pulse as soon as possible. The client can send zero for At to indicate that the action should be performed immediately. The client must take care to synchronise with all ports after issuing ArmPulse(), but before issuing UnlockPulse().
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.UnlockPulse"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /get_timed_action_timestamp:
    post:
      tags:
        - Configuration
      operationId: get_timed_action_timestamp
      description: |-
        Get the current timestamp (in nanoseconds after timestamps were cleared). Client then uses it to schedule future actions.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.GetTimedActionTimestamp"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.GetTimedActionTimestamp"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /schedule_timed_actions:
    post:
      tags:
        - Configuration
      operationId: schedule_timed_actions
      description: |-
        Schedule the given list of actions.  If any of them cannot be scheduled (typically because the scheduled time is not far enough in the future), return an error message.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ScheduleTimedActions"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.ScheduleTimedActions"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /start_tx:
    post:
      tags:
        - Configuration
      operationId: start_tx
      description: |-
        Start sending packets.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.StartTx"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /stop_tx:
    post:
      tags:
        - Configuration
      operationId: stop_tx
      description: |-
        Stop sending packets.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.StopTx"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_streams:
    post:
      tags:
        - Configuration
      operationId: configure_streams
      description: |-
        TBD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigureStreams"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_update_streams:
    post:
      tags:
        - Configuration
      operationId: configure_update_streams
      description: |-
        TBD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigureUpdateStreams"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.ConfigureUpdateStreams"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_streams_data_begin:
    post:
      tags:
        - Configuration
      operationId: configure_streams_data_begin
      description: |-
        TBD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigureStreamsDataBegin"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_streams_data_write:
    post:
      tags:
        - Configuration
      operationId: configure_streams_data_write
      description: |-
        TBD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigureStreamsDataWrite"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /refresh_value_list:
    post:
      tags:
        - Configuration
      operationId: refresh_value_list
      description: |-
        TBD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.RefreshValueList"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.RefreshValueList"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /tx_mac_sec_arm_trigger_timer:
    post:
      tags:
        - Configuration
      operationId: tx_mac_sec_arm_trigger_timer
      description: |-
        Calling this API will start the trigger timer for Rekey.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.TxMacSecArmTriggerTimer"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_mac_sec_port_control:
    post:
      tags:
        - Configuration
      operationId: configure_mac_sec_port_control
      description: |-
        Calling this API is mandetory for MACSEC. This will configure all fields of  Tx and Rx Port Control
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigureMacSecPortControl"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_mac_sec_sc_control:
    post:
      tags:
        - Configuration
      operationId: configure_mac_sec_sc_control
      description: |-
        Calling this API is mandetory for MACSEC traffic. This will configure all Tx and Rx SA related configurations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigureMacSecScControl"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /update_mac_sec_streams:
    post:
      tags:
        - Configuration
      operationId: update_mac_sec_streams
      description: |-
        We expect this method to be called before start transmit and at on the fly changes. Therefore, this API should be called before start MACSEC streams.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.UpdateMacSecStreams"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_mac_sec_sa_keys:
    post:
      tags:
        - Configuration
      operationId: configure_mac_sec_sa_keys
      description: |-
        This API can be used for key update or configure operations.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigureMacSecSaKeys"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /toggle_mac_sec_sa_keys:
    post:
      tags:
        - Configuration
      operationId: toggle_mac_sec_sa_keys
      description: |-
        Key will not be part of this message. This API will help to toggle the keys of mentioned SAs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ToggleMacSecSaKeys"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /reset_mac_sec_scs:
    post:
      tags:
        - Configuration
      operationId: reset_mac_sec_scs
      description: |-
        This API will Reset mentioned SCs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ResetMacSecScs"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /set_mac_sec_sa_key_state:
    post:
      tags:
        - Configuration
      operationId: set_mac_sec_sa_key_state
      description: |-
        This API will Set State of Rx or Tx SA Keys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.SetMacSecSaKeyState"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /get_mac_sec_sa_key_status:
    post:
      tags:
        - Configuration
      operationId: get_mac_sec_sa_key_status
      description: |-
        TBD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.GetMacSecSaKeyStatus"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.GetMacSecSaKeyStatus"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /configure_mac_sec_uds:
    post:
      tags:
        - Configuration
      operationId: configure_mac_sec_uds
      description: |-
        TBD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ConfigureMacSecUDS"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /get_stat_catalog:
    post:
      tags:
        - Configuration
      operationId: get_stat_catalog
      description: |-
        Retrieve the current stat catalog. This method can be called anytime, after  the client succeded to connect. If the application calls this method multiple times without any change in port mode(or other actions that can alterate the  stat catalog), the results should be identical. If the port mode is changed, the result may or may not be the same before and after the port mode change. Currently, client has no limitation related to the number of times this method can be called or when can be called. It should be called after  every port mode change to be sure that SV register for the proper stats.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.GetStatCatalog"
      responses:
        "200":
          description: TBD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response.GetStatCatalog"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /clear_stats:
    post:
      tags:
        - Configuration
      operationId: clear_stats
      description: |-
        Clears stat measurements.The client calls this to reset all the port measurements. These include measurements like framesSent, framesReceived, bytesSent, bytesReceived,etc.  The reset value for a measurement will depend on the underlying quantity being measured, but will generally be zero. This method can be called anytime to clear the stat measurements. Can be used on demand whenever the client wants to reset stats measurements values. The effect  is visible only if stat measurements are being updated or had been updated and currenlty have a  value different than default.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ClearStats"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /clear_per_stream_tx_stats:
    post:
      tags:
        - Configuration
      operationId: clear_per_stream_tx_stats
      description: |-
        Clears per stream tx stat measurements.The client calls this to reset all the per stream tx measurements. These include measurements like framesSent, bytes sent, frameCountSizeBin, etc.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.ClearPerStreamTxStats"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /vm_acquire:
    post:
      tags:
        - Configuration
      operationId: vm_acquire
      description: |-
        TBD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.VMAcquire"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /vm_add_port:
    post:
      tags:
        - Configuration
      operationId: vm_add_port
      description: |-
        TBD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.VMAddPort"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /vm_remove_port:
    post:
      tags:
        - Configuration
      operationId: vm_remove_port
      description: |-
        TBD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request.VMRemovePort"
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
  /vm_release:
    post:
      tags:
        - Configuration
      operationId: vm_release
      description: |-
        TBD
      responses:
        "200":
          $ref: "#/components/responses/Success"
          x-field-uid: 1
        default:
          $ref: "#/components/responses/Failure"
          x-field-uid: 2
components:
  responses:
    Success:
      description: list of warnings
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Warning"
    Failure:
      description: The request did not succeed and server has responded with error details.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Warning:
      description: |-
        A list of warnings that have occurred while executing the request.
      type: object
      properties:
        warnings:
          description: A list of any system specific warnings that have occurred while executing the request.
          type: array
          items:
            type: string
          x-field-uid: 1
    Error:
      description: |-
        Error response generated while serving API request.
      type: object
      required:
        - code
        - errors
      properties:
        code:
          description: |-
            Numeric status code based on the underlying transport being used. The API server MUST set this code explicitly based on following references: HTTP 4xx errors - https://datatracker.ietf.org/doc/html/rfc9110#section-15.5, HTTP 5xx errors: https://datatracker.ietf.org/doc/html/rfc9110#section-15.6, gRPC errors: https://grpc.github.io/grpc/core/md_doc_statuscodes.html
          type: integer
          format: int32
          x-field-uid: 1
        kind:
          description: Classification of error originating from within API server that may not be mapped to the value in `code`. Absence of this field may indicate that the error did not originate from within API server.
          type: string
          x-enum:
            validation:
              x-field-uid: 1
            internal:
              x-field-uid: 2
          x-field-uid: 2
        errors:
          description: List of error messages generated while executing the request.
          type: array
          items:
            type: string
          x-field-uid: 3
    Response.GetOwner:
      type: object
      properties:
        info:
          $ref: "#/components/schemas/Server.OwnershipInfo"
          x-field-uid: 1
    Request.ClearOwnership:
      type: object
      properties:
        force:
          type: boolean
          x-field-uid: 1
    Request.GetCapturePacketCount:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        direction:
          $ref: "#/components/schemas/Capture.eDirection"
          x-field-uid: 2
    Response.GetCapturePacketCount:
      type: object
      properties:
        packet_count_list:
          $ref: "#/components/schemas/Capture.PacketCountList"
          x-field-uid: 1
    Request.ClearTimestamp:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Request.UnlockPulse:
      type: object
      properties:
        generate:
          $ref: "#/components/schemas/Server.ePulseGenerator"
          x-field-uid: 1
        at:
          $ref: "#/components/schemas/PFType.UTCTime"
          x-field-uid: 2
    Request.SubscribeEvent:
      type: object
      properties:
        port_id_list:
          $ref: "#/components/schemas/IdType.PortIdList"
          x-field-uid: 1
        events:
          $ref: "#/components/schemas/Server.EventSubscribeList"
          x-field-uid: 2
    Request.setNTPMasterOnNTPClient:
      type: object
      properties:
        ntp_server:
          type: string
          x-field-uid: 1
    Request.GetTimedActionTimestamp:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Response.GetTimedActionTimestamp:
      type: object
      properties:
        value:
          type: integer
          format: int64
          x-field-uid: 1
    Request.ConfigureUpdateStreams:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        streams_configuration:
          $ref: "#/components/schemas/Stream.StreamUpdateConfigurationList"
          x-field-uid: 2
        is_adjusting:
          type: boolean
          x-field-uid: 3
    Response.ConfigureUpdateStreams:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
          x-field-uid: 1
    Request.ConfigureMacSecScControl:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        is_update:
          type: boolean
          x-field-uid: 2
        mac_sec_data:
          $ref: "#/components/schemas/MacSec.MacSecConfigurationType"
          x-field-uid: 3
    Request.GetStatCatalog:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Response.GetStatCatalog:
      type: object
      properties:
        catalog_item:
          $ref: "#/components/schemas/StatCatalog.StHtgCatalogItem"
          x-field-uid: 1
    Request.ClearPerStreamTxStats:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Request.VMAddPort:
      type: object
      properties:
        vm_port_info:
          $ref: "#/components/schemas/Server.VMPortInfo"
          x-field-uid: 1
    Request.SetUserInfo:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/Server.UserInfo"
          x-field-uid: 1
    Request.ScheduleTimedActions:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        action_list:
          $ref: "#/components/schemas/Server.TimedActionList"
          x-field-uid: 2
    Response.ScheduleTimedActions:
      type: object
      properties:
        error:
          type: boolean
          x-field-uid: 1
        error_message:
          type: string
          x-field-uid: 2
    Request.UpdateMacSecStreams:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        is_update:
          type: boolean
          x-field-uid: 2
        mac_sec:
          $ref: "#/components/schemas/MacSec.MacSecStreamControlTypeList"
          x-field-uid: 3
    Request.TakeOwnership:
      type: object
      properties:
        force:
          type: boolean
          x-field-uid: 1
    Request.PrepareForStartTx:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        is_transmitting:
          type: boolean
          x-field-uid: 2
    Request.StopCapture:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        direction:
          $ref: "#/components/schemas/Capture.eDirection"
          x-field-uid: 2
    Request.ConfigureStreamsDataWrite:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        background_data:
          $ref: "#/components/schemas/Stream.BackgroundDataConfigurationType"
          x-field-uid: 2
        table_udf_data:
          $ref: "#/components/schemas/Stream.StreamTableUdfDataTypeList"
          x-field-uid: 3
        kill_bit_udf_data:
          $ref: "#/components/schemas/Stream.KillBitListSettingList"
          x-field-uid: 4
        value_list_udf_data:
          $ref: "#/components/schemas/Stream.StreamValueListSettingList"
          x-field-uid: 5
        is_complete:
          type: boolean
          x-field-uid: 6
    Request.ConfigureMacSecPortControl:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        tx_mac_sec_port_control:
          $ref: "#/components/schemas/MacSec.TxMacSecGlobalPortConfigType"
          x-field-uid: 2
        rx_mac_sec_port_control:
          $ref: "#/components/schemas/MacSec.RxMacSecGlobalPortConfigType"
          x-field-uid: 3
    Request.ClearStats:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Request.ConfigureStreamsDataBegin:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        background_data:
          $ref: "#/components/schemas/Stream.BackgroundDataConfigurationType"
          x-field-uid: 2
        value_list:
          $ref: "#/components/schemas/Stream.ValueListConfigurationType"
          x-field-uid: 3
        range_list:
          $ref: "#/components/schemas/Stream.RangeListConfigurationType"
          x-field-uid: 4
        kill_bit_list:
          $ref: "#/components/schemas/Stream.KillBitListConfigurationType"
          x-field-uid: 5
        table_udf:
          $ref: "#/components/schemas/Stream.StreamTableUdfDataTypeList"
          x-field-uid: 6
        is_complete:
          type: boolean
          x-field-uid: 7
    Request.ConfigureMacSecSaKeys:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        tx_sa_and_key_list:
          $ref: "#/components/schemas/MacSec.TxSaKeyConfigurationTypeList"
          x-field-uid: 2
        rx_sa_and_key_list:
          $ref: "#/components/schemas/MacSec.RxSaKeyConfigurationTypeList"
          x-field-uid: 3
    Request.SetTxRxSyncInterval:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        tx_rx_sync_interval_config:
          $ref: "#/components/schemas/Port.TxRxSyncIntervalConfigurationType"
          x-field-uid: 2
    Request.ToggleMacSecSaKeys:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        is_tx:
          type: boolean
          x-field-uid: 2
        sc_list:
          $ref: "#/components/schemas/Server.MacSecSaList"
          x-field-uid: 3
    Request.SetTcpPort:
      type: object
      properties:
        tcp_port:
          type: integer
          format: int32
          x-field-uid: 1
    Request.ConfigurePortBasic:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        configuration:
          $ref: "#/components/schemas/Port.PortConfigurationStreamsType"
          x-field-uid: 2
    Request.GetCaptureStatus:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        direction:
          $ref: "#/components/schemas/Capture.eDirection"
          x-field-uid: 2
    Response.GetCaptureStatus:
      type: object
      properties:
        status_list:
          $ref: "#/components/schemas/Capture.StatusList"
          x-field-uid: 1
    Request.ResetMacSecScs:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        is_tx:
          type: boolean
          x-field-uid: 2
        sc_list:
          $ref: "#/components/schemas/Server.MacSecSaList"
          x-field-uid: 3
    Request.SetMacSecSaKeyState:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        is_tx:
          type: boolean
          x-field-uid: 2
        sa_key_states:
          $ref: "#/components/schemas/MacSec.SaKeyStateConfigurationList"
          x-field-uid: 3
    Request.StartDebugSession:
      type: object
      properties:
        user_name:
          type: string
          x-field-uid: 1
        port_list_info:
          $ref: "#/components/schemas/DebugTopology.DebugPortInfoList"
          x-field-uid: 2
    Response.StartDebugSession:
      type: object
      properties:
        port_list_info_with_unique_id:
          $ref: "#/components/schemas/DebugTopology.DebugPortInfoWithUniqueIdList"
          x-field-uid: 1
        interceptor_info:
          $ref: "#/components/schemas/DebugTopology.InterceptorInfo"
          x-field-uid: 2
    Response.GetCurrentServerTime:
      type: object
      properties:
        time:
          $ref: "#/components/schemas/PFType.UTCTime"
          x-field-uid: 1
    Request.RefreshValueList:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Response.RefreshValueList:
      type: object
      properties:
        value_list_udf_data:
          $ref: "#/components/schemas/Stream.StreamValueListSettingList"
          x-field-uid: 1
    Request.GetMacSecSaKeyStatus:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        get_tx_key_status:
          type: boolean
          x-field-uid: 2
        tx_sa_list:
          $ref: "#/components/schemas/Server.MacSecSaList"
          x-field-uid: 3
        get_rx_key_status:
          type: boolean
          x-field-uid: 4
        rx_sa_list:
          $ref: "#/components/schemas/Server.MacSecSaList"
          x-field-uid: 5
    Response.GetMacSecSaKeyStatus:
      type: object
      properties:
        tx_mac_sec_sa_key_status_list:
          $ref: "#/components/schemas/MacSec.TxMacSecSaKeyStatusTypeList"
          x-field-uid: 1
        rx_mac_sec_sa_key_status_list:
          $ref: "#/components/schemas/MacSec.RxMacSecSaKeyStatusTypeList"
          x-field-uid: 2
    Request.ConfigureMacSecUDS:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        macsec_uds_config_list:
          $ref: "#/components/schemas/MacSec.RxMacSecUDSConfigList"
          x-field-uid: 2
    Request.UnsubscribeEvent:
      type: object
      properties:
        port_id_list:
          $ref: "#/components/schemas/IdType.PortIdList"
          x-field-uid: 1
        events:
          $ref: "#/components/schemas/Server.EventSubscribeList"
          x-field-uid: 2
    Request.ConfigureCapture:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        capture_configuration_list:
          $ref: "#/components/schemas/Capture.ConfigurationList"
          x-field-uid: 2
    Request.StartCapture:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        direction:
          $ref: "#/components/schemas/Capture.eDirection"
          x-field-uid: 2
    Request.ClearLatency:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        enable_tx_rx_sync:
          type: boolean
          x-field-uid: 2
    Request.ConfigurePCPUFilters:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        pcpu_filters_config:
          $ref: "#/components/schemas/Port.PCPUFiltersConfigurationType"
          x-field-uid: 2
    Request.RetrieveCapture:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        capture_retrieve_options:
          $ref: "#/components/schemas/Capture.RetrieveOptionsType"
          x-field-uid: 2
    Response.RetrieveCapture:
      type: object
      properties:
        record:
          $ref: "#/components/schemas/Capture.RecordType"
          x-field-uid: 1
    Request.ArmPulse:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        pulse_actions:
          $ref: "#/components/schemas/Server.PulseActionList"
          x-field-uid: 2
    Request.StopTx:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Request.InitRequest:
      type: object
      properties:
        requested_version:
          $ref: "#/components/schemas/PFType.VersionType"
          x-field-uid: 1
    Response.InitRequest:
      type: object
      properties:
        provided_version:
          $ref: "#/components/schemas/PFType.VersionType"
          x-field-uid: 1
    Response.GetNTPState:
      type: object
      properties:
        state:
          $ref: "#/components/schemas/Server.eNTPState"
          x-field-uid: 1
    Request.ConfigureStreams:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        stream_configuration:
          $ref: "#/components/schemas/Stream.TrafficConfigurationType"
          x-field-uid: 2
    Request.VMRemovePort:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Request.FeatureRequest:
      type: object
      properties:
        subtree:
          type: string
          x-field-uid: 1
    Response.FeatureRequest:
      type: object
      properties:
        features:
          type: string
          x-field-uid: 1
    Request.ConfigurePort:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        configuration:
          $ref: "#/components/schemas/Port.PortConfigurationType"
          x-field-uid: 2
    Request.StopLatency:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Request.ClearLatencyForSelectedPGIDs:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        pgid_ranges:
          $ref: "#/components/schemas/PacketGroup.PGIDRangeList"
          x-field-uid: 2
        enable_tx_rx_sync:
          type: boolean
          x-field-uid: 3
    Request.StopDebugSession:
      type: object
      properties:
        user_name:
          type: string
          x-field-uid: 1
        port_id_list:
          $ref: "#/components/schemas/DebugTopology.DebugPortIdList"
          x-field-uid: 2
    Response.StopDebugSession:
      type: object
      properties:
        interceptor_info:
          $ref: "#/components/schemas/DebugTopology.InterceptorInfo"
          x-field-uid: 1
    Request.StartLatency:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Request.StartTx:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Request.TxMacSecArmTriggerTimer:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
    Request.VMAcquire:
      type: object
      properties:
        slot_id:
          $ref: "#/components/schemas/IdType.SlotId"
          x-field-uid: 1
        management_ip:
          type: string
          x-field-uid: 2
    Request.SetRxLatency:
      type: object
      properties:
        port_id:
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        rx_latency_config:
          $ref: "#/components/schemas/Port.ReceiveConfigurationType"
          x-field-uid: 2
    Capture:
      description: |-
        TBD
      type: object
      properties:
        qo_s_pattern_type:
          $ref: "#/components/schemas/Capture.QoSPatternType"
          x-field-uid: 1
        data_pattern_type:
          $ref: "#/components/schemas/Capture.DataPatternType"
          x-field-uid: 2
        mac_pattern_type:
          $ref: "#/components/schemas/Capture.MacPatternType"
          x-field-uid: 3
        pattern_list:
          $ref: "#/components/schemas/Capture.PatternList"
          x-field-uid: 4
        frame_size_range_type:
          $ref: "#/components/schemas/Capture.FrameSizeRangeType"
          x-field-uid: 5
        expression_content:
          $ref: "#/components/schemas/Capture.ExpressionContent"
          x-field-uid: 6
        expression_list:
          $ref: "#/components/schemas/Capture.ExpressionList"
          x-field-uid: 7
        settings_type:
          $ref: "#/components/schemas/Capture.SettingsType"
          x-field-uid: 8
        configuration_list:
          $ref: "#/components/schemas/Capture.ConfigurationList"
          x-field-uid: 9
        event_type:
          $ref: "#/components/schemas/Capture.EventType"
          x-field-uid: 10
        status_list:
          $ref: "#/components/schemas/Capture.StatusList"
          x-field-uid: 11
        packet_count_list:
          $ref: "#/components/schemas/Capture.PacketCountList"
          x-field-uid: 12
        record_type:
          $ref: "#/components/schemas/Capture.RecordType"
          x-field-uid: 13
        retrieve_options_type:
          $ref: "#/components/schemas/Capture.RetrieveOptionsType"
          x-field-uid: 14
    Capture.PatternList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Capture.PatternType"
    Capture.ExpressionContent:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Capture.ExpressionElementType"
    Capture.ExpressionList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Capture.ExpressionType"
    Capture.ConfigurationList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Capture.ConfigurationType"
    Capture.StatusList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Capture.StatusType"
    Capture.PacketCountList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Capture.PacketCountType"
    DataIntegrityRx:
      description: |-
        TBD
      type: object
      properties:
        configuration_type:
          $ref: "#/components/schemas/DataIntegrityRx.ConfigurationType"
          x-field-uid: 1
    DebugTopology:
      description: |-
        TBD
      type: object
      properties:
        debug_port_topology_info:
          $ref: "#/components/schemas/DebugTopology.DebugPortTopologyInfo"
          x-field-uid: 1
        debug_port_connection_info:
          $ref: "#/components/schemas/DebugTopology.DebugPortConnectionInfo"
          x-field-uid: 2
        interceptor_info:
          $ref: "#/components/schemas/DebugTopology.InterceptorInfo"
          x-field-uid: 3
        debug_port_info_list:
          $ref: "#/components/schemas/DebugTopology.DebugPortInfoList"
          x-field-uid: 4
        debug_port_info_with_unique_id_list:
          $ref: "#/components/schemas/DebugTopology.DebugPortInfoWithUniqueIdList"
          x-field-uid: 5
        debug_port_id_list:
          $ref: "#/components/schemas/DebugTopology.DebugPortIdList"
          x-field-uid: 6
    DebugTopology.DebugPortInfoList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/DebugTopology.DebugPortInfo"
    DebugTopology.DebugPortInfoWithUniqueIdList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/DebugTopology.DebugPortInfoWithUniqueId"
    DebugTopology.DebugPortIdList:
      description: TBD
      type: array
      items:
        type: integer
        format: int32
    Feature:
      description: |-
        TBD
      type: object
      properties:
        attribute_list:
          $ref: "#/components/schemas/Feature.AttributeList"
          x-field-uid: 1
        feature_list:
          $ref: "#/components/schemas/Feature.FeatureList"
          x-field-uid: 2
        feature_group_list:
          $ref: "#/components/schemas/Feature.FeatureGroupList"
          x-field-uid: 3
    Feature.FeatureGroupList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Feature.FeatureGroupType"
    Feature.AttributeList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Feature.AttributeType"
    Feature.FeatureList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Feature.FeatureType"
    IdType:
      description: |-
        All identification types are enumerated here. For each type,    the range of valid values will include all the positive integers,    and zero.    Negative values, and in particular -1, are invalid identification values.
      type: object
      properties:
        port_id_list:
          $ref: "#/components/schemas/IdType.PortIdList"
          x-field-uid: 1
        capture_record_id:
          $ref: "#/components/schemas/IdType.CaptureRecordId"
          x-field-uid: 2
        capture_pattern_id:
          $ref: "#/components/schemas/IdType.CapturePatternId"
          x-field-uid: 3
        capture_filter_id:
          $ref: "#/components/schemas/IdType.CaptureFilterId"
          x-field-uid: 4
        stream_id:
          $ref: "#/components/schemas/IdType.StreamId"
          x-field-uid: 5
        udf_id:
          $ref: "#/components/schemas/IdType.UdfId"
          x-field-uid: 6
        stream_group_id:
          $ref: "#/components/schemas/IdType.StreamGroupId"
          x-field-uid: 7
        packet_group_id:
          $ref: "#/components/schemas/IdType.PacketGroupId"
          x-field-uid: 8
        slot_id:
          $ref: "#/components/schemas/IdType.SlotId"
          x-field-uid: 9
        secure_channel_id:
          $ref: "#/components/schemas/IdType.SecureChannelId"
          x-field-uid: 10
        key_id:
          $ref: "#/components/schemas/IdType.KeyId"
          x-field-uid: 11
    IdType.PortIdList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/IdType.PortId"
    MacSec:
      description: |-
        TBD
      type: object
      properties:
        key_configuration_type:
          $ref: "#/components/schemas/MacSec.KeyConfigurationType"
          x-field-uid: 1
        sa_key_state_configuration_list:
          $ref: "#/components/schemas/MacSec.SaKeyStateConfigurationList"
          x-field-uid: 2
        split_mgid_configuration_type:
          $ref: "#/components/schemas/MacSec.SplitMGIDConfigurationType"
          x-field-uid: 3
        unauthenticated_data_configuration_type:
          $ref: "#/components/schemas/MacSec.UnauthenticatedDataConfigurationType"
          x-field-uid: 4
        mac_sec_stream_control_type_list:
          $ref: "#/components/schemas/MacSec.MacSecStreamControlTypeList"
          x-field-uid: 5
        tx_sc_configuration_list:
          $ref: "#/components/schemas/MacSec.TxScConfigurationList"
          x-field-uid: 6
        rx_sc_configuration_list:
          $ref: "#/components/schemas/MacSec.RxScConfigurationList"
          x-field-uid: 7
        rx_mgid_configuration_type:
          $ref: "#/components/schemas/MacSec.RxMGIDConfigurationType"
          x-field-uid: 8
        rx_mac_sec_uds_config_list:
          $ref: "#/components/schemas/MacSec.RxMacSecUDSConfigList"
          x-field-uid: 9
        tx_sa_key_configuration_type_list:
          $ref: "#/components/schemas/MacSec.TxSaKeyConfigurationTypeList"
          x-field-uid: 10
        rx_sa_key_configuration_type_list:
          $ref: "#/components/schemas/MacSec.RxSaKeyConfigurationTypeList"
          x-field-uid: 11
        mac_sec_configuration_type:
          $ref: "#/components/schemas/MacSec.MacSecConfigurationType"
          x-field-uid: 12
        tx_mac_sec_global_port_config_type:
          $ref: "#/components/schemas/MacSec.TxMacSecGlobalPortConfigType"
          x-field-uid: 13
        rx_mac_sec_global_port_config_type:
          $ref: "#/components/schemas/MacSec.RxMacSecGlobalPortConfigType"
          x-field-uid: 14
        tx_mac_sec_sa_key_status_type_list:
          $ref: "#/components/schemas/MacSec.TxMacSecSaKeyStatusTypeList"
          x-field-uid: 15
        rx_mac_sec_sa_key_status_type_list:
          $ref: "#/components/schemas/MacSec.RxMacSecSaKeyStatusTypeList"
          x-field-uid: 16
    MacSec.MacSecStreamControlTypeList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/MacSec.MacSecStreamControlType"
    MacSec.TxScConfigurationList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/MacSec.TxScConfigurationType"
    MacSec.TxSaKeyConfigurationTypeList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/MacSec.TxSaKeyConfigurationType"
    MacSec.TxMacSecSaKeyStatusTypeList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/MacSec.TxMacSecSaKeyStatusType"
    MacSec.RxMacSecSaKeyStatusTypeList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/MacSec.RxMacSecSaKeyStatusType"
    MacSec.SaKeyStateConfigurationList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/MacSec.SaKeyStateConfigurationType"
    MacSec.RxScConfigurationList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/MacSec.RxScConfigurationType"
    MacSec.RxMacSecUDSConfigList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/MacSec.RxMacSecUDSConfigType"
    MacSec.RxSaKeyConfigurationTypeList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/MacSec.RxSaKeyConfigurationType"
    PFType:
      description: |-
        TBD
      type: object
      properties:
        fixed_point16:
          $ref: "#/components/schemas/PFType.FixedPoint16"
          x-field-uid: 1
        mac_address_type:
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 2
        percent_type:
          $ref: "#/components/schemas/PFType.PercentType"
          x-field-uid: 3
        parts_per_million_type:
          $ref: "#/components/schemas/PFType.PartsPerMillionType"
          x-field-uid: 4
        milli_seconds_type:
          $ref: "#/components/schemas/PFType.MilliSecondsType"
          x-field-uid: 5
        nano_seconds_list:
          $ref: "#/components/schemas/PFType.NanoSecondsList"
          x-field-uid: 6
        pico_seconds_type:
          $ref: "#/components/schemas/PFType.PicoSecondsType"
          x-field-uid: 7
        kb_type:
          $ref: "#/components/schemas/PFType.KBType"
          x-field-uid: 8
        error_type:
          $ref: "#/components/schemas/PFType.ErrorType"
          x-field-uid: 9
        gap_time_type:
          $ref: "#/components/schemas/PFType.GapTimeType"
          x-field-uid: 10
        gap_precision_time_type:
          $ref: "#/components/schemas/PFType.GapPrecisionTimeType"
          x-field-uid: 11
        release_type:
          $ref: "#/components/schemas/PFType.ReleaseType"
          x-field-uid: 12
        revision_type:
          $ref: "#/components/schemas/PFType.RevisionType"
          x-field-uid: 13
        version_type:
          $ref: "#/components/schemas/PFType.VersionType"
          x-field-uid: 14
        owner_list:
          $ref: "#/components/schemas/PFType.OwnerList"
          x-field-uid: 15
        utc_time:
          $ref: "#/components/schemas/PFType.UTCTime"
          x-field-uid: 16
    PFType.NanoSecondsList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/PFType.NanoSecondsType"
    PFType.OwnerList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/PFType.OwnerType"
    PacketGroup:
      description: |-
        TBD
      type: object
      properties:
        latency_bin_list:
          $ref: "#/components/schemas/PacketGroup.LatencyBinList"
          x-field-uid: 1
        size_bin_list:
          $ref: "#/components/schemas/PacketGroup.SizeBinList"
          x-field-uid: 2
        split_packet_group_list:
          $ref: "#/components/schemas/PacketGroup.SplitPacketGroupList"
          x-field-uid: 3
        pgid_range_list:
          $ref: "#/components/schemas/PacketGroup.PGIDRangeList"
          x-field-uid: 4
        size_bins_type:
          $ref: "#/components/schemas/PacketGroup.SizeBinsType"
          x-field-uid: 5
    PacketGroup.SizeBinList:
      description: TBD
      type: array
      items:
        type: integer
        format: int32
    PacketGroup.SplitPacketGroupList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/SplitPacketGroup.ConfigurationType"
    PacketGroup.PGIDRangeList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/PacketGroup.PGIDRange"
    PacketGroup.LatencyBinList:
      description: TBD
      type: array
      items:
        type: number
        format: double
    Port:
      description: |-
        TBD
      type: object
      properties:
        rx_mode_set:
          $ref: "#/components/schemas/Port.RxModeSet"
          x-field-uid: 1
        pfc_priority_queue_channel_set:
          $ref: "#/components/schemas/Port.PfcPriorityQueueChannelSet"
          x-field-uid: 2
        pfc_priority_queue_type:
          $ref: "#/components/schemas/Port.PfcPriorityQueueType"
          x-field-uid: 3
        pfc_priority_queue_map_type:
          $ref: "#/components/schemas/Port.PfcPriorityQueueMapType"
          x-field-uid: 4
        basic_configuration_type:
          $ref: "#/components/schemas/Port.BasicConfigurationType"
          x-field-uid: 5
        tx_lane_list:
          $ref: "#/components/schemas/Port.TxLaneList"
          x-field-uid: 6
        tx_lane_mapping_type:
          $ref: "#/components/schemas/Port.TxLaneMappingType"
          x-field-uid: 7
        tx_lane_configuration_type:
          $ref: "#/components/schemas/Port.TxLaneConfigurationType"
          x-field-uid: 8
        transmit_configuration_type:
          $ref: "#/components/schemas/Port.TransmitConfigurationType"
          x-field-uid: 9
        receive_configuration_type:
          $ref: "#/components/schemas/Port.ReceiveConfigurationType"
          x-field-uid: 10
        pause_configuration_type:
          $ref: "#/components/schemas/Port.PauseConfigurationType"
          x-field-uid: 11
        ethernet_configuration_type:
          $ref: "#/components/schemas/Port.EthernetConfigurationType"
          x-field-uid: 12
        data_center_configuration_type:
          $ref: "#/components/schemas/Port.DataCenterConfigurationType"
          x-field-uid: 13
        pfc_configuration_type:
          $ref: "#/components/schemas/Port.PfcConfigurationType"
          x-field-uid: 14
        port_configuration_type:
          $ref: "#/components/schemas/Port.PortConfigurationType"
          x-field-uid: 15
        port_configuration_streams_type:
          $ref: "#/components/schemas/Port.PortConfigurationStreamsType"
          x-field-uid: 16
        pcpu_filters_configuration_type:
          $ref: "#/components/schemas/Port.PCPUFiltersConfigurationType"
          x-field-uid: 17
        tx_rx_sync_interval_configuration_type:
          $ref: "#/components/schemas/Port.TxRxSyncIntervalConfigurationType"
          x-field-uid: 18
    Port.RxModeSet:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Port.eRxMode"
    Port.PfcPriorityQueueChannelSet:
      description: TBD
      type: array
      items:
        type: integer
        format: int32
    Port.TxLaneList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Port.TxLaneType"
    RateMonitoring:
      description: |-
        TBD
      type: object
      properties:
        rate_monitoring_list:
          $ref: "#/components/schemas/RateMonitoring.RateMonitoringList"
          x-field-uid: 1
    RateMonitoring.RateMonitoringList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/RateMonitoring.ConfigurationType"
    RxAutoInstrumentation:
      description: |-
        TBD
      type: object
      properties:
        configuration_type:
          $ref: "#/components/schemas/RxAutoInstrumentation.ConfigurationType"
          x-field-uid: 1
    Server:
      description: |-
        TBD
      type: object
      properties:
        user_info:
          $ref: "#/components/schemas/Server.UserInfo"
          x-field-uid: 1
        ownership_info:
          $ref: "#/components/schemas/Server.OwnershipInfo"
          x-field-uid: 2
        event_subscribe_list:
          $ref: "#/components/schemas/Server.EventSubscribeList"
          x-field-uid: 3
        event_notification_list:
          $ref: "#/components/schemas/Server.EventNotificationList"
          x-field-uid: 4
        pulse_action_list:
          $ref: "#/components/schemas/Server.PulseActionList"
          x-field-uid: 5
        timed_action_list:
          $ref: "#/components/schemas/Server.TimedActionList"
          x-field-uid: 6
        mac_sec_sa_list:
          $ref: "#/components/schemas/Server.MacSecSaList"
          x-field-uid: 7
        vm_port_info:
          $ref: "#/components/schemas/Server.VMPortInfo"
          x-field-uid: 8
    Server.EventSubscribeList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Server.eEvent"
    Server.EventNotificationList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Server.EventInfo"
    Server.PulseActionList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Server.ePulseAction"
    Server.TimedActionList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Server.TimedAction"
    Server.MacSecSaList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/IdType.SecureChannelId"
    SplitPacketGroup:
      description: |-
        TBD
      type: object
      properties:
        configuration_type:
          $ref: "#/components/schemas/SplitPacketGroup.ConfigurationType"
          x-field-uid: 1
    StatCatalog:
      description: |-
        TBD
      type: object
      properties:
        st_htg_catalog_stat_list:
          $ref: "#/components/schemas/StatCatalog.StHtgCatalogStatList"
          x-field-uid: 1
        st_htg_catalog_item:
          $ref: "#/components/schemas/StatCatalog.StHtgCatalogItem"
          x-field-uid: 2
    StatCatalog.StHtgCatalogStatList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/StatCatalog.StHtgCatalogStat"
    Stream:
      description: |-
        TBD
      type: object
      properties:
        tx_delay_type:
          $ref: "#/components/schemas/Stream.TxDelayType"
          x-field-uid: 1
        tsn_qbv_gate_config_type:
          $ref: "#/components/schemas/Stream.TsnQbvGateConfigType"
          x-field-uid: 2
        stream_control_type:
          $ref: "#/components/schemas/Stream.StreamControlType"
          x-field-uid: 3
        inter_frame_gap_control_type:
          $ref: "#/components/schemas/Stream.InterFrameGapControlType"
          x-field-uid: 4
        rate_control_type:
          $ref: "#/components/schemas/Stream.RateControlType"
          x-field-uid: 5
        inter_burst_gap_control_type:
          $ref: "#/components/schemas/Stream.InterBurstGapControlType"
          x-field-uid: 6
        inter_stream_gap_control_type:
          $ref: "#/components/schemas/Stream.InterStreamGapControlType"
          x-field-uid: 7
        dst_addr_control_type:
          $ref: "#/components/schemas/Stream.DstAddrControlType"
          x-field-uid: 8
        src_addr_control_type:
          $ref: "#/components/schemas/Stream.SrcAddrControlType"
          x-field-uid: 9
        quad_gaussian_fractional_data_type:
          $ref: "#/components/schemas/Stream.QuadGaussianFractionalDataType"
          x-field-uid: 10
        quad_gaussian_packet_data_type:
          $ref: "#/components/schemas/Stream.QuadGaussianPacketDataType"
          x-field-uid: 11
        quad_gaussian_data_list:
          $ref: "#/components/schemas/Stream.QuadGaussianDataList"
          x-field-uid: 12
        random_quad_gaussian_control_type:
          $ref: "#/components/schemas/Stream.RandomQuadGaussianControlType"
          x-field-uid: 13
        weighted_pair_data_list:
          $ref: "#/components/schemas/Stream.WeightedPairDataList"
          x-field-uid: 14
        random_weighted_pair_control_type:
          $ref: "#/components/schemas/Stream.RandomWeightedPairControlType"
          x-field-uid: 15
        random_size_control_type:
          $ref: "#/components/schemas/Stream.RandomSizeControlType"
          x-field-uid: 16
        frame_preemption_type:
          $ref: "#/components/schemas/Stream.FramePreemptionType"
          x-field-uid: 17
        frame_control_type:
          $ref: "#/components/schemas/Stream.FrameControlType"
          x-field-uid: 18
        background_overlay_list:
          $ref: "#/components/schemas/Stream.BackgroundOverlayList"
          x-field-uid: 19
        background_data_control_type:
          $ref: "#/components/schemas/Stream.BackgroundDataControlType"
          x-field-uid: 20
        pseudo_header_field_list:
          $ref: "#/components/schemas/Stream.PseudoHeaderFieldList"
          x-field-uid: 21
        checksum_data_type:
          $ref: "#/components/schemas/Stream.ChecksumDataType"
          x-field-uid: 22
        length_insertion_type:
          $ref: "#/components/schemas/Stream.LengthInsertionType"
          x-field-uid: 23
        protocol_header_info_list:
          $ref: "#/components/schemas/Stream.ProtocolHeaderInfoList"
          x-field-uid: 24
        special_protocol_info_type:
          $ref: "#/components/schemas/Stream.SpecialProtocolInfoType"
          x-field-uid: 25
        protocol_header_info_list_type:
          $ref: "#/components/schemas/Stream.ProtocolHeaderInfoListType"
          x-field-uid: 26
        data_integrity_tx_type:
          $ref: "#/components/schemas/Stream.DataIntegrityTxType"
          x-field-uid: 27
        autodetect_signature_tx_type:
          $ref: "#/components/schemas/Stream.AutodetectSignatureTxType"
          x-field-uid: 28
        background_data_type:
          $ref: "#/components/schemas/Stream.BackgroundDataType"
          x-field-uid: 29
        background_data_setting_list:
          $ref: "#/components/schemas/Stream.BackgroundDataSettingList"
          x-field-uid: 30
        stream_range_list_setting_list:
          $ref: "#/components/schemas/Stream.StreamRangeListSettingList"
          x-field-uid: 31
        stream_value_list_setting_list:
          $ref: "#/components/schemas/Stream.StreamValueListSettingList"
          x-field-uid: 32
        kill_bit_list_setting_list:
          $ref: "#/components/schemas/Stream.KillBitListSettingList"
          x-field-uid: 33
        configuration_data_type:
          $ref: "#/components/schemas/Stream.ConfigurationDataType"
          x-field-uid: 34
        configuration_update_data_type:
          $ref: "#/components/schemas/Stream.ConfigurationUpdateDataType"
          x-field-uid: 35
        stream_configuration_list:
          $ref: "#/components/schemas/Stream.StreamConfigurationList"
          x-field-uid: 36
        stream_update_configuration_list:
          $ref: "#/components/schemas/Stream.StreamUpdateConfigurationList"
          x-field-uid: 37
        background_data_configuration_type:
          $ref: "#/components/schemas/Stream.BackgroundDataConfigurationType"
          x-field-uid: 38
        value_list_configuration_type:
          $ref: "#/components/schemas/Stream.ValueListConfigurationType"
          x-field-uid: 39
        range_list_configuration_type:
          $ref: "#/components/schemas/Stream.RangeListConfigurationType"
          x-field-uid: 40
        kill_bit_list_configuration_type:
          $ref: "#/components/schemas/Stream.KillBitListConfigurationType"
          x-field-uid: 41
        stream_table_udf_data_type_list:
          $ref: "#/components/schemas/Stream.StreamTableUdfDataTypeList"
          x-field-uid: 42
        traffic_configuration_type:
          $ref: "#/components/schemas/Stream.TrafficConfigurationType"
          x-field-uid: 43
    Stream.QuadGaussianDataList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.QuadGaussianControlType"
    Stream.WeightedPairDataList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.WeightedPairDataType"
    Stream.PseudoHeaderFieldList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.PseudoHeaderField"
    Stream.ProtocolHeaderInfoList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.ProtocolHeaderInfoType"
    Stream.BackgroundDataSettingList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.BackgroundDataSettingType"
    Stream.StreamValueListSettingList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.StreamValueListSettingType"
    Stream.StreamConfigurationList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.StreamConfigurationType"
    Stream.StreamUpdateConfigurationList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.StreamUpdateConfigurationType"
    Stream.StreamTableUdfDataTypeList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.StreamTableUdfDataType"
    Stream.BackgroundOverlayList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.BackgroundOverlayType"
    Stream.StreamRangeListSettingList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.StreamRangeListSettingType"
    Stream.KillBitListSettingList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Stream.KillBitListSettingType"
    TableUdf:
      description: |-
        TBD
      type: object
      properties:
        col_id:
          $ref: "#/components/schemas/TableUdf.ColId"
          x-field-uid: 1
        row_id:
          $ref: "#/components/schemas/TableUdf.RowId"
          x-field-uid: 2
        column_setting_list:
          $ref: "#/components/schemas/TableUdf.ColumnSettingList"
          x-field-uid: 3
        column_data_type:
          $ref: "#/components/schemas/TableUdf.ColumnDataType"
          x-field-uid: 4
        row_data_list:
          $ref: "#/components/schemas/TableUdf.RowDataList"
          x-field-uid: 5
        column_mv_data_list:
          $ref: "#/components/schemas/TableUdf.ColumnMVDataList"
          x-field-uid: 6
        table_udf_configuration_type:
          $ref: "#/components/schemas/TableUdf.TableUdfConfigurationType"
          x-field-uid: 7
    TableUdf.ColumnSettingList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/TableUdf.ColumnSettingType"
    TableUdf.RowDataList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/TableUdf.RowDataType"
    TableUdf.ColumnMVDataList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/TableUdf.ColumnMVDataType"
    Udf:
      description: |-
        TBD
      type: object
      properties:
        counter_setting_type:
          $ref: "#/components/schemas/Udf.CounterSettingType"
          x-field-uid: 1
        random_setting_type:
          $ref: "#/components/schemas/Udf.RandomSettingType"
          x-field-uid: 2
        nested_counter_setting_type:
          $ref: "#/components/schemas/Udf.NestedCounterSettingType"
          x-field-uid: 3
        i_pv4_setting_type:
          $ref: "#/components/schemas/Udf.IPv4SettingType"
          x-field-uid: 4
        udf_value_list_setting_type:
          $ref: "#/components/schemas/Udf.UdfValueListSettingType"
          x-field-uid: 5
        kill_bit_setting_type:
          $ref: "#/components/schemas/Udf.KillBitSettingType"
          x-field-uid: 6
        list_int64:
          $ref: "#/components/schemas/Udf.ListInt64"
          x-field-uid: 7
        skip_value_setting_type:
          $ref: "#/components/schemas/Udf.SkipValueSettingType"
          x-field-uid: 8
        skip_synchronization_setting_type:
          $ref: "#/components/schemas/Udf.SkipSynchronizationSettingType"
          x-field-uid: 9
        udf_list:
          $ref: "#/components/schemas/Udf.UdfList"
          x-field-uid: 10
        udf_mv_data_type:
          $ref: "#/components/schemas/Udf.UdfMVDataType"
          x-field-uid: 11
        sequence_udf_configuration_type:
          $ref: "#/components/schemas/Udf.SequenceUdfConfigurationType"
          x-field-uid: 12
        range_list_type:
          $ref: "#/components/schemas/Udf.RangeListType"
          x-field-uid: 13
        value_list:
          $ref: "#/components/schemas/Udf.ValueList"
          x-field-uid: 14
        kill_bit_list:
          $ref: "#/components/schemas/Udf.KillBitList"
          x-field-uid: 15
        udf_configuration_type:
          $ref: "#/components/schemas/Udf.UdfConfigurationType"
          x-field-uid: 16
    Udf.ListInt64:
      description: TBD
      type: array
      items:
        type: integer
        format: int64
    Udf.UdfList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Udf.UdfType"
    Udf.ValueList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Udf.ValueListType"
    Udf.KillBitList:
      description: TBD
      type: array
      items:
        $ref: "#/components/schemas/Udf.KillBitListType"
    Server.TimedAction:
      description: |-
        action, the action to be executed. when, the time (in nanoseconds after timestamps were cleared) to execute the action.
      type: object
      properties:
        action:
          description: |-
            TBD
          type: string
          x-enum:
            kStartTx:
              x-field-uid: 1
            kStopTx:
              x-field-uid: 2
            kStartSyncStats:
              x-field-uid: 3
            kStopSyncStats:
              x-field-uid: 4
            kStartRxCapture:
              x-field-uid: 5
            kStopRxCapture:
              x-field-uid: 6
            kStartTxCapture:
              x-field-uid: 7
            kStopTxCapture:
              x-field-uid: 8
            kStartTxGcl:
              x-field-uid: 9
            kStartRxGcl:
              x-field-uid: 10
          x-field-uid: 1
        when:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 2
    Stream.StreamRangeListSettingType:
      description: |-
        TBD
      type: object
      properties:
        stream_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.StreamId"
          x-field-uid: 1
        range_list:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.RangeListType"
          x-field-uid: 2
    Capture.RetrieveOptionsType:
      description: |-
        TBD
      type: object
      properties:
        start_index:
          description: |-
            Soecified the index of the first packet we want to retrieve.   Starts from 0 to total number of captured packets - 1.
          type: integer
          format: int32
          x-field-uid: 1
        num_packets:
          description: |-
            The number of packets we want to retrieve starting from packet with   index startIndex.
          type: integer
          format: int32
          x-field-uid: 2
        direction:
          description: |-
            Specify on which packets to retrieve: RX/TX or from RX-TX merged.
          type: string
          x-enum:
            kRx:
              x-field-uid: 1
            kTx:
              x-field-uid: 2
            kBidirectional:
              x-field-uid: 3
          x-field-uid: 3
        format:
          description: |-
            The captured packets can be in either PCAP standard format or RAW format.
          type: string
          x-enum:
            kRaw:
              x-field-uid: 1
            kPcap:
              x-field-uid: 2
          x-field-uid: 4
        precision:
          description: |-
            This option is only available for PCAP format. It reffers to the timestamp   precision: nanosecond or microsecond.
          type: string
          x-enum:
            kMicroSec:
              x-field-uid: 1
            kNanoSec:
              x-field-uid: 2
          x-field-uid: 5
    MacSec.MacSecStreamControlType:
      description: |-
        TBD
      type: object
      properties:
        enable_mac_sec:
          description: |-
            True = Then following information will be valid.   False = Otherwise, skip this data type.
          type: boolean
          x-field-uid: 1
        enable_authentication:
          description: |-
            True = Insert ICV   False = No ICV
          type: boolean
          x-field-uid: 2
        enable_confidentiality:
          description: |-
            True = Encrypt Packet   False = Don't Encrypt Packet or Decrypt Packet
          type: boolean
          x-field-uid: 3
        enable_fixed_icv_mode:
          description: |-
            True = ICV is at a Fixed offset for all packets   False = ICV is adjacent to the CRC
          type: boolean
          x-field-uid: 4
        enable_bad_authentication:
          description: |-
            True = All ICV have errors.  Only useful when enableAuthentication is also enabled   False = Good ICV
          type: boolean
          x-field-uid: 5
        sci_present:
          description: |-
            True = SECTAG includes SCI (SECTAG has 16 Bytes)   False =  Short SECTAG. No SCI present (SECTAG has 8 Bytes)
          type: boolean
          x-field-uid: 6
        sc_id:
          description: |-
            It could be 0 to 255.
          $ref: "#/components/schemas/IdType.SecureChannelId"
          x-field-uid: 7
        udf_sc_index_mode:
          description: |-
            True = SC Index comes from UDF;   False = SC Index comes from stream control
          type: boolean
          x-field-uid: 8
        icv_byte_offset:
          description: |-
            An 8 bit value representing the byte offset in the packet,   not including the preamble. This value is only used if   Fixed ICV Mode is set to '1'.
          type: integer
          format: int32
          x-field-uid: 9
        an_overlay_enable:
          description: |-
            True = AN overlaid by hardware;   False = AN not overlaid by hardware
          type: boolean
          x-field-uid: 10
        pn_overlay_enable:
          description: |-
            True = Pn overlaid by the hardware   False = Pn not overlaid by the hardware
          type: boolean
          x-field-uid: 11
        enable_fudge_factor:
          description: |-
            True = enable Insertion   False = disable Insertion
          type: boolean
          x-field-uid: 12
        ff_byte_offset:
          description: |-
            Byte offset into the packet where the FF is inserted.   Even byte offsets only.
          type: integer
          format: int32
          x-field-uid: 13
        ff_delta:
          description: |-
            The value to be subtracted from the Packet Length.
          type: integer
          format: int32
          x-field-uid: 14
    Port.TransmitConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        transmit_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kPacketStreams:
              x-field-uid: 1
            kPacketFlows:
              x-field-uid: 2
            kAdvancedScheduler:
              x-field-uid: 3
            kEcho:
              x-field-uid: 4
          x-field-uid: 1
        enable_repeatable_last_random_pattern:
          description: |-
            TBD
          type: boolean
          x-field-uid: 2
        transmit_clock_deviation:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.PartsPerMillionType"
          x-field-uid: 3
        transmit_clock_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kInternal:
              x-field-uid: 1
            kExternal:
              x-field-uid: 2
          x-field-uid: 4
        pre_emphasis:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.PercentType"
          x-field-uid: 5
        ignore_link_status:
          description: |-
            TBD
          type: boolean
          x-field-uid: 6
    Port.PCPUFiltersConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        pcpu_filter_block:
          description: |-
            TBD
          type: string
          x-enum:
            kEnable:
              x-field-uid: 1
            kDisable:
              x-field-uid: 2
            kNoAction:
              x-field-uid: 3
          x-field-uid: 1
        all_filters:
          description: |-
            TBD
          type: string
          x-enum:
            kEnable:
              x-field-uid: 1
            kDisable:
              x-field-uid: 2
            kNoAction:
              x-field-uid: 3
          x-field-uid: 2
        drop_ais:
          description: |-
            TBD
          type: string
          x-enum:
            kEnable:
              x-field-uid: 1
            kDisable:
              x-field-uid: 2
            kNoAction:
              x-field-uid: 3
          x-field-uid: 3
    MacSec.KeyConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        key_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.KeyId"
          x-field-uid: 1
        key_value:
          description: |-
            Member keyValue should be either 16 bytes or 32 bytes long. For 16 bytes AES modes, only first 16 octets will be used. For 32 bytes AES modes, only first 32 octets will be used.
          type: string
          x-field-uid: 2
        ssci:
          description: |-
            The 32 bit SSCI to create the IV for the encryption engine.
          type: integer
          format: int32
          x-field-uid: 3
        salt:
          description: |-
            The 96 bit Salt Value to create the IV for the encryption engine.
          type: string
          x-field-uid: 4
        init_pn:
          description: |-
            Initial PN of the key is either a 4B value or an 8B value, depending on the AES mode. For Tx, only the lower 4/8 bits of the control field are writable and usable. For Rx, this is only configured when aesMode is set to XPN.  For Rx, FPGA will give more priority to first 4 bytes or highest 32 bits.
          type: integer
          format: int64
          x-field-uid: 5
    Stream.InterFrameGapControlType:
      description: |-
        TBD
      type: object
      properties:
        ifg_type:
          description: |-
            TBD
          type: string
          x-enum:
            kGapFixed:
              x-field-uid: 1
            kGapRandom:
              x-field-uid: 2
          x-field-uid: 1
        ifg:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.GapTimeType"
          x-field-uid: 2
        ifg_min:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.GapTimeType"
          x-field-uid: 3
        ifg_max:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.GapTimeType"
          x-field-uid: 4
        ifg_precise:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.GapPrecisionTimeType"
          x-field-uid: 5
    Stream.BackgroundDataControlType:
      description: |-
        TBD
      type: object
      properties:
        size:
          description: |-
            Number of bytes of background data to allocate to this stream.
          type: integer
          format: int32
          x-field-uid: 1
        background_overlay:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.BackgroundOverlayList"
          x-field-uid: 2
    IdType.PortId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            The PortId is only locally unique and identifies the test   port within this test application. The first test port   controlled by the test application would have PortId 0,   and the second test port would have PortId 1.   The number of test ports available in this test application is   advertised in PORTCOUNT.
          type: integer
          format: int32
          x-field-uid: 1
    IdType.CaptureRecordId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            Each capture record within a capture buffer is identified with   a capture record id to allow the client to name each of the   captured packets with each id matching the ordinal number of   each captured packet. The first captured packet will have id 0, the   next will have id 1, etc.
          type: integer
          format: int32
          x-field-uid: 1
    IdType.StreamGroupId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            The SreamGroupId is only locally unique to a test port within   this test application and is used to aggregate streams into   groups that will share memory resources.
          type: integer
          format: int32
          x-field-uid: 1
    IdType.PacketGroupId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            The PacketGroupId is only locally unique to a test port within   this test application. The first group controlled would have   PacketGroupId 0, and the second group would have PacketGroupId 1.   The number of packet groups available on a test port is advertised   PACKETGROUP-COUNT.
          type: integer
          format: int32
          x-field-uid: 1
    Stream.DstAddrControlType:
      description: |-
        TBD
      type: object
      properties:
        dst_addr:
          description: |-
            Initial destination MAC address assigned to this stream.
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 1
        dst_addr_mask_select:
          description: |-
            Selects the bits in the 48-bit destination MAC address that are to be   masked by the value set by mDstAddrMaskValue.
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 2
        dst_addr_mask_value:
          description: |-
            Value of the masked bits selected by mDstAddrMaskSelect in the   destination MAC address.
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 3
        dst_addr_repeat_counter:
          description: |-
            Specifies how the destination MAC address is incremented or decremented.
          type: string
          x-enum:
            kIncrement:
              x-field-uid: 1
            kContIncrement:
              x-field-uid: 2
            kDecrement:
              x-field-uid: 3
            kContDecrement:
              x-field-uid: 4
            kIdle:
              x-field-uid: 5
            kCtrRandom:
              x-field-uid: 6
            kDstAddrArp:
              x-field-uid: 7
            kContJitterTestPattern:
              x-field-uid: 8
            kContRandomTestPattern:
              x-field-uid: 9
          x-field-uid: 4
        dst_addr_step:
          description: |-
            If dstRepeatCounter is set to increment, contIncrement, decrement, or   contDecrement, and the load module supports an arbitrary step size,   then this is the value to increment/decrement the destination address   by for each address repetition.
          type: integer
          format: int64
          x-field-uid: 5
        num_dst_addr:
          description: |-
            Number of destination MAC addresses the stream is going to   be transmitted to. Must be more than 1 to set the mDstAddrRepeatCounter   to anything other than idle.
          type: integer
          format: int64
          x-field-uid: 6
        enable_dst_addr_continue_from_last_value:
          description: |-
            If true, then the MAC Destination Address of the stream will not   reset when returning to a stream ID, but continue from the   previous stream.
          type: boolean
          x-field-uid: 7
    Stream.RandomSizeControlType:
      description: |-
        TBD
      type: object
      properties:
        random_size_type:
          description: |-
            TBD
          type: string
          x-enum:
            kRandomSizeOff:
              x-field-uid: 1
            kRandomSizeUniform:
              x-field-uid: 2
            kRandomSizeWeightedPair:
              x-field-uid: 3
            kRandomSizeQuadGuassian:
              x-field-uid: 4
            kRandomSizeCisco:
              x-field-uid: 5
            kRandomSizeImix:
              x-field-uid: 6
            kRandomSizeTolly:
              x-field-uid: 7
            kRandomSizeRprTriModal:
              x-field-uid: 8
            kRandomSizeRprQuadModal:
              x-field-uid: 9
          x-field-uid: 1
        random_quad_gaussian_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.RandomQuadGaussianControlType"
          x-field-uid: 2
        random_weighted_pair_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.RandomWeightedPairControlType"
          x-field-uid: 3
    DebugTopology.DebugPortInfo:
      description: |-
        TBD
      type: object
      properties:
        topology:
          description: |-
            TBD
          $ref: "#/components/schemas/DebugTopology.DebugPortTopologyInfo"
          x-field-uid: 1
        connection:
          description: |-
            TBD
          $ref: "#/components/schemas/DebugTopology.DebugPortConnectionInfo"
          x-field-uid: 2
    IdType.UdfId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            The UdfId is only locally unique to a test port within   this test application. The first UDF controlled would have   UdfId 0, and the second UDF would have UdfId 1.
          type: integer
          format: int32
          x-field-uid: 1
    MacSec.SplitMGIDConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        dev_id_offset:
          description: |-
            Offset from Start of Packet in bytes where the MGID 0 DevID    is extracted from the packet. One byte is extracted for use   to form the MGID Index.
          type: integer
          format: int32
          x-field-uid: 1
        dev_id_bit_mask:
          description: |-

          type: string
          x-field-uid: 2
        ca_id_offset:
          description: |-
            Offset from Start of Packet in bytes where the MGID Bit Mask   is to be applied.
          type: integer
          format: int32
          x-field-uid: 3
        ca_id_bit_mask:
          description: |-

          type: string
          x-field-uid: 4
    Port.PfcConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        priority_queue_map:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcPriorityQueueMapType"
          x-field-uid: 1
        response_delay_quanta:
          description: |-
            Configure the PFC response delay. Set to -1 to disable.
          type: integer
          format: int32
          x-field-uid: 2
    StatCatalog.StHtgCatalogItem:
      description: |-
        TBD
      type: object
      properties:
        port_id:
          description: |-
            Port id for which stat item is retrieved
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        source_type:
          description: |-
            StatSourceType Name
          type: string
          x-field-uid: 2
        description:
          description: |-
            StatSourceType Description
          type: string
          x-field-uid: 3
        item_id:
          description: |-
            StatSourceType Id.
          type: integer
          format: int32
          x-field-uid: 4
        stat_list:
          description: |-
            StatSourceType Stats
          $ref: "#/components/schemas/StatCatalog.StHtgCatalogStatList"
          x-field-uid: 5
    Stream.KillBitListSettingType:
      description: |-
        TBD
      type: object
      properties:
        stream_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.StreamId"
          x-field-uid: 1
        kill_bit_list:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.KillBitList"
          x-field-uid: 2
    TableUdf.RowDataType:
      description: |-
        TBD
      type: object
      properties:
        row_id:
          description: |-
            The row that this data applies to.
          $ref: "#/components/schemas/TableUdf.RowId"
          x-field-uid: 1
        columns:
          description: |-
            Data for each of the columns in this row.
          $ref: "#/components/schemas/TableUdf.ColumnDataType"
          x-field-uid: 2
    Capture.EventType:
      description: |-
        TBD
      type: object
      properties:
        port_id:
          description: |-
            Port to which this capture status pertains.
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        state:
          description: |-
            The current state of the capture system.
          type: string
          x-enum:
            kCaptureStopped:
              x-field-uid: 1
            kCaptureStarted:
              x-field-uid: 2
          x-field-uid: 2
        capture_records:
          description: |-
            Number of capture records available.
          type: integer
          format: int32
          x-field-uid: 3
    PacketGroup.SizeBinsType:
      description: |-
        TBD
      type: object
      properties:
        enable_size_bins:
          description: |-
            Enables the use of size bins.
          type: boolean
          x-field-uid: 1
        size_bins:
          description: |-
            If enableSizeBins is true, this list will contain integer frame size   values.
          $ref: "#/components/schemas/PacketGroup.SizeBinList"
          x-field-uid: 2
    Port.TxLaneType:
      description: |-
        TBD
      type: object
      properties:
        physical_lane:
          description: |-
            TBD
          type: string
          x-field-uid: 1
        pcs_lane:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
        lane_skew:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.PicoSecondsType"
          x-field-uid: 3
    Server.OwnershipInfo:
      description: |-
        owner, the current owner, empty if not owned description, provided at the time ownership was taken duration, number of milliseconds this port has been owned by current owner.
      type: object
      properties:
        owner:
          description: |-
            TBD
          type: string
          x-field-uid: 1
        description:
          description: |-
            TBD
          type: string
          x-field-uid: 2
        duration:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.MilliSecondsType"
          x-field-uid: 3
    PFType.MacAddressType:
      description: |-
        The MAC address comprises 48 bits (6 octets) usually denoted using hexadecimal radix as 01:23:45:67:89:ab. The representation is held in the least significant 48 bits of an int64. The most significant 16 bits will be ignored.
      type: object
      properties:
        address:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 1
    Port.EthernetConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        advertise1000_full_duplex:
          description: |-
            TBD
          type: boolean
          x-field-uid: 1
        advertise_abilities:
          description: |-
            TBD
          type: string
          x-enum:
            kNone:
              x-field-uid: 1
            kSend:
              x-field-uid: 2
            kSendAndReceive:
              x-field-uid: 3
            kSendAndOrReceive:
              x-field-uid: 4
          x-field-uid: 2
        rx_tx_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kGigNormal:
              x-field-uid: 1
            kGigLoopback:
              x-field-uid: 2
            kGigCableDisconnect:
              x-field-uid: 3
          x-field-uid: 3
        primary_secondary:
          description: |-
            TBD
          type: string
          x-enum:
            kNegotiateEither:
              x-field-uid: 1
            kNegotiatePortPrimary:
              x-field-uid: 2
            kNegotiatePortSecondary:
              x-field-uid: 3
          x-field-uid: 4
        primary_secondary_timeout_enable:
          description: |-
            TBD
          type: boolean
          x-field-uid: 5
        pma_clock:
          description: |-
            TBD
          type: string
          x-enum:
            kAutoNegotiate:
              x-field-uid: 1
            kPrimary:
              x-field-uid: 2
            kSecondary:
              x-field-uid: 3
          x-field-uid: 6
        enable_manual_auto_negotiate:
          description: |-
            TBD
          type: boolean
          x-field-uid: 7
        enable_phy_polling:
          description: |-
            TBD
          type: boolean
          x-field-uid: 8
    Stream.RandomWeightedPairControlType:
      description: |-
        TBD
      type: object
      properties:
        weightedpair:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.WeightedPairDataList"
          x-field-uid: 1
        source_stream_id:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
    Stream.StreamConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        stream_id:
          description: |-
            The identifier of the stream to which the following configuration   pertains.
          $ref: "#/components/schemas/IdType.StreamId"
          x-field-uid: 1
        name:
          description: |-
            The name of the stream configured by the user
          type: string
          x-field-uid: 2
        state:
          description: |-
            Set the state of a stream. This is used to either create a stream,   modify an existing stream, or delete a stream. A stream may either   be active (configured and transmitting packets) or inactive   (configured by not transmitting packets).
          type: string
          x-enum:
            kInactive:
              x-field-uid: 1
            kActive:
              x-field-uid: 2
          x-field-uid: 3
        configuration_data:
          description: |-
            Provide the configuration data for this stream. This field may   be absent if only the state of the stream needs to be changed.
          $ref: "#/components/schemas/Stream.ConfigurationDataType"
          x-field-uid: 4
    Capture.PatternType:
      description: |-
        TBD
      type: object
      properties:
        pattern_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.CapturePatternId"
          x-field-uid: 1
        pattern_kind:
          description: |-
            The kind of pattern determines the data field content   of the rest of the structure.   Consult CAPTURE-PATTERN-TYPES to determine the number of   the different kinds of patterns available.
          type: string
          x-enum:
            kSrcAddrPattern:
              x-field-uid: 1
            kDstAddrPattern:
              x-field-uid: 2
            kDataPattern:
              x-field-uid: 3
            kQoSPattern:
              x-field-uid: 4
          x-field-uid: 2
        src_addr_pattern:
          description: |-
            TBD
          $ref: "#/components/schemas/Capture.MacPatternType"
          x-field-uid: 3
        dst_addr_pattern:
          description: |-
            TBD
          $ref: "#/components/schemas/Capture.MacPatternType"
          x-field-uid: 4
        data_pattern:
          description: |-
            TBD
          $ref: "#/components/schemas/Capture.DataPatternType"
          x-field-uid: 5
        qos_pattern:
          description: |-
            TBD
          $ref: "#/components/schemas/Capture.QoSPatternType"
          x-field-uid: 6
    Capture.SettingsType:
      description: |-
        TBD
      type: object
      properties:
        capture_mode:
          description: |-
            Controls the mode in which packet capture is performed is performed.   For example, the capture system can wait for a trigger packet to   arrive, or it can operate continuously.
          type: string
          x-enum:
            kContinuousMode:
              x-field-uid: 1
            kTriggerMode:
              x-field-uid: 2
          x-field-uid: 1
        after_trigger_filter:
          description: |-
            When operating in triggered mode, controls the capture of data after   triggering.
          type: string
          x-enum:
            kCaptureAll:
              x-field-uid: 1
            kUseTriggerFilter:
              x-field-uid: 2
            kUseCaptureFilter:
              x-field-uid: 3
          x-field-uid: 2
        before_trigger_filter:
          description: |-
            When operating in triggered mode, controls the capture of   data prior to triggering.
          type: string
          x-enum:
            kCaptureAll:
              x-field-uid: 1
            kCaptureNone:
              x-field-uid: 2
            kUseCaptureFilter:
              x-field-uid: 3
          x-field-uid: 3
        continuous_filter:
          description: |-
            When operating in continuous mode, controls whether data captured   in continous mode is filtered.
          type: string
          x-enum:
            kCaptureAll:
              x-field-uid: 1
            kUseCaptureFilter:
              x-field-uid: 2
          x-field-uid: 4
        slice_size:
          description: |-
            The maximum number of octets of each frame that is saved in this   capture buffer. For example, if a 1500 octet frame is received by   the probe and this option is set to 500, then only 500 octets of   the frame is stored in the associated capture buffer.   If this value is set to 0, the capture buffer saves as many octets as   is possible. If the sliceSize is set larger than the maximim hardware   supported slice size, the maximum is used.
          type: integer
          format: int32
          x-field-uid: 5
        trigger_position:
          description: |-
            Controls the dividing line within the capture buffer between before   trigger data and post trigger data. This control is only useful   in triggered mode and before trigger capture operation is enabled.   The trigger position is expressed in KB from the beginning of the   capture buffer. The beginning of the buffer with this position   is used in a wrap-around mode for before trigger data and   the remainder is filled up with triggered data.   The size of the capture buffer is available from CAPTURE-BUFFER-SIZE.
          $ref: "#/components/schemas/PFType.KBType"
          x-field-uid: 6
    Capture.RecordType:
      description: |-
        TBD
      type: object
      properties:
        count:
          description: |-
            This is the number of packets available from this response.
          type: integer
          format: int32
          x-field-uid: 1
        buffer:
          description: |-
            Each capture buffer comprises a sequence of captured packets   each following the form specified by the PCAP standard or the   RAW packet information defined above.
          type: string
          x-field-uid: 2
    MacSec.RxScConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        sc_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.SecureChannelId"
          x-field-uid: 1
        pn_window_size:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
        confidentiality_offset:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 3
        aes_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kGcm128:
              x-field-uid: 1
            kGcm256:
              x-field-uid: 2
            kXpn128:
              x-field-uid: 3
            kXpn256:
              x-field-uid: 4
          x-field-uid: 4
        enable_sc_timer:
          description: |-
            TBD
          type: boolean
          x-field-uid: 5
        enable_master:
          description: |-
            TBD
          type: boolean
          x-field-uid: 6
        enable_strict_validation:
          description: |-
            TBD
          type: boolean
          x-field-uid: 7
        sci:
          description: |-
            TBD
          type: string
          x-field-uid: 8
    Stream.BackgroundOverlayType:
      description: |-
        TBD
      type: object
      properties:
        offset:
          description: |-
            The offset, within the packet, where the overlay will take place.
          type: integer
          format: int32
          x-field-uid: 1
        overlay_data:
          description: |-
            The data to be overlayed into the background.
          type: string
          x-field-uid: 2
    Capture.StatusType:
      description: |-
        TBD
      type: object
      properties:
        direction:
          description: |-
            TBD
          type: string
          x-enum:
            kRx:
              x-field-uid: 1
            kTx:
              x-field-uid: 2
            kBidirectional:
              x-field-uid: 3
          x-field-uid: 1
        is_wrapped:
          description: |-
            TBD
          type: boolean
          x-field-uid: 2
        is_full:
          description: |-
            TBD
          type: boolean
          x-field-uid: 3
        pkts_available:
          description: |-
            TBD
          type: boolean
          x-field-uid: 4
        total_pkts:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 5
        total_bytes:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 6
        trigger_index:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 7
        state:
          description: |-
            The current state of the capture system.
          type: string
          x-enum:
            kCaptureStopped:
              x-field-uid: 1
            kCaptureStarted:
              x-field-uid: 2
          x-field-uid: 8
    MacSec.MacSecConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        tx_sc_config:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.TxScConfigurationList"
          x-field-uid: 1
        rx_sc_config:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.RxScConfigurationList"
          x-field-uid: 2
    PFType.KBType:
      description: |-
        Model a quantity of data in KB units.
      type: object
      properties:
        k_b:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 1
    StatCatalog.StHtgCatalogStat:
      description: |-
        TBD
      type: object
      properties:
        name:
          description: |-
            Stat name.
          type: string
          x-field-uid: 1
        description:
          description: |-
            Stat description.
          type: string
          x-field-uid: 2
        stat_id:
          description: |-
            Stat id .
          type: integer
          format: int32
          x-field-uid: 3
        stat_engine_path:
          description: |-
            Stat path.
          type: string
          x-field-uid: 4
        stat_value_type:
          description: |-
            Stat path.
          type: string
          x-enum:
            kCounter:
              x-field-uid: 1
            kString:
              x-field-uid: 2
            kPair:
              x-field-uid: 3
          x-field-uid: 5
        stat_type:
          description: |-
            Mapped from Stat ValueType
          type: string
          x-enum:
            kDefault:
              x-field-uid: 1
            kArray:
              x-field-uid: 2
          x-field-uid: 6
        index_min:
          description: |-
            Mapped from StatArraySize. Always 0.
          type: integer
          format: int32
          x-field-uid: 7
        index_max:
          description: |-
            Mapped from StatArraySize. ArraySize -1.
          type: integer
          format: int32
          x-field-uid: 8
        mode_list:
          description: |-
            Stat modeList.
          type: string
          x-field-uid: 9
    Stream.StreamTableUdfDataType:
      description: |-
        TBD
      type: object
      properties:
        stream_id:
          description: |-
            The identifier of the stream to which the following configuration   pertains.
          $ref: "#/components/schemas/IdType.StreamId"
          x-field-uid: 1
        columns:
          description: |-
            table udf is returned as a list of multi values. One multi value per column
          $ref: "#/components/schemas/TableUdf.ColumnMVDataList"
          x-field-uid: 2
        row_offset:
          description: |-
            rowOffset indicates from which row in this column the multivalue should be expanded.
          type: integer
          format: int32
          x-field-uid: 3
        is_complete:
          description: |-
            TBD
          type: boolean
          x-field-uid: 4
    Udf.UdfMVDataType:
      description: |-
        TBD
      type: object
      properties:
        data:
          description: |-
            MultiValue contains all data for the list
          type: string
          x-field-uid: 1
        offset:
          description: |-
            offset indicates from which row-offset the multivalue should be expanded.
          type: integer
          format: int32
          x-field-uid: 2
    DataIntegrityRx.ConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        enable_time_stamp:
          description: |-
            Indicates that the received data integrity packets areexpected to have a 48-bit timestamp before the FCS value.
          type: boolean
          x-field-uid: 1
        signature:
          description: |-
            On the receive port, the signature is   used to filter only those packets that have a matching signature.
          type: string
          x-field-uid: 2
        signature_offset:
          description: |-
            The offset, within the packet, of the data integrity signature.
          type: integer
          format: int32
          x-field-uid: 3
    IdType.CapturePatternId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            Each capture pattern within a capture buffer is identified with   a capture pattern id to allow the client to name each of the patterns.
          type: integer
          format: int32
          x-field-uid: 1
    IdType.KeyId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            The KeyId is used by Secure Channel for MACSEC feature.   Currently, it could be 0 or 1.
          type: integer
          format: int32
          x-field-uid: 1
    Server.VMPortInfo:
      description: |-
        id, a unique identifier for the port. name, the name of the test interface. macAddress, the mac address of the test interface. macAddress, the mac address of the test interface. ipAddress, the ip address of the test interface. mtu, the mtu of the test interface. isPromiscuous, whether or not the test nic should be placed in promiscuous mode.
      type: object
      properties:
        id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        name:
          description: |-
            TBD
          type: string
          x-field-uid: 2
        mac_address:
          description: |-
            TBD
          type: string
          x-field-uid: 3
        ip_address:
          description: |-
            TBD
          type: string
          x-field-uid: 4
        mtu:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 5
        is_promiscuous:
          description: |-
            TBD
          type: boolean
          x-field-uid: 6
    Capture.QoSPatternType:
      description: |-
        TBD
      type: object
      properties:
        qos_byte_offset:
          description: |-
            QoS byte offset.
          type: integer
          format: int32
          x-field-uid: 1
        anchor:
          description: |-
            Select the position from which to anchor the offset.
          type: string
          x-enum:
            kStartOfFrame:
              x-field-uid: 1
            kStartOfIP:
              x-field-uid: 2
            kStartOfProtocol:
              x-field-uid: 3
          x-field-uid: 2
        offset:
          description: |-
            Offset to begin matching from the anchor.
          type: integer
          format: int32
          x-field-uid: 3
        pattern:
          description: |-
            Only frames that contain this pattern at the specified offset   are filtered, captured or counted.
          type: string
          x-field-uid: 4
        select:
          description: |-
            A bit mask that allows to specify which bits of the pattern   should be selected for matching in the pattern.
          type: string
          x-field-uid: 5
    PFType.MilliSecondsType:
      description: |-
        Model a duration in milliseconds using a plain integer. This allows signed durations up to 300000 years to expressed.
      type: object
      properties:
        milli_seconds:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 1
    Port.DataCenterConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        data_center_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kNoMapping:
              x-field-uid: 1
            kOnePriorityMapping:
              x-field-uid: 2
            kTwoPriorityMapping:
              x-field-uid: 3
            kFourPriorityMapping:
              x-field-uid: 4
            kEightPriorityMapping:
              x-field-uid: 5
          x-field-uid: 1
    Udf.SkipSynchronizationSettingType:
      description: |-
        TBD
      type: object
      properties:
        enable:
          description: |-
            If this option is set to true, this UDF will be synchronized with the UDF set in   syncPrimary, with this UDF acting as the Secondary.  There is no need to enable   synchronization in the primary UDF.   Currently, only odd-numbered UDFs (i.e. UDF 1, 3, 5, 7, 9) can act as secondary, and,   thus, have synchronization enabled.   When synchronized, if the primary UDF skips a value, the secondary UDF will also skip   its current value.   Both the primary and secondary UDF must have the same counter mode and range.   Currently, this can only be enabled if the counter mode is random.   This is not supported on Jasper or Mazuma.
          type: boolean
          x-field-uid: 1
        sync_master:
          description: |-
            The primary UDF to which this UDF is synchronized if enable is set to true.   Currently, only even-numbered UDFs (i.e. UDF 0, 2, 4, 6, 8) can act as primary,   and only UDF N+1 can be synchronized with and act as secondary to UDF N.   This means that if this is UDF 1, the primary can only be UDF 0;    if this is UDF 3, the primary can only be UDF 2 etc.   This is not supported on Jasper or Mazuma.
          $ref: "#/components/schemas/IdType.UdfId"
          x-field-uid: 2
    PFType.ReleaseType:
      description: |-
        TBD
      type: object
      properties:
        major:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 1
        minor:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
    TableUdf.ColumnSettingType:
      description: |-
        TBD
      type: object
      properties:
        col_id:
          description: |-
            The column that this data applies to.
          $ref: "#/components/schemas/TableUdf.ColId"
          x-field-uid: 1
        offset:
          description: |-
            The offset, in bytes, from the beginning of the packet to the start   of the column data.
          type: integer
          format: int32
          x-field-uid: 2
        size:
          description: |-
            The size in bytes of the column data.
          type: integer
          format: int32
          x-field-uid: 3
    IdType.StreamId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            The StreamId is only locally unique to a test port within   this test application. The first stream controlled would have   StreamId 0, and the second stream would have StreamId 1.   The number of stream available on a test port is advertised   STREAM-COUNT.
          type: integer
          format: int32
          x-field-uid: 1
    MacSec.TxMacSecGlobalPortConfigType:
      description: |-
        TBD
      type: object
      properties:
        enable_global_config:
          description: |-
            TBD
          type: boolean
          x-field-uid: 1
        tx_trigger_timer:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 2
    PFType.PercentType:
      description: |-
        Model a percentage using a fixed point representation. A value of 40.5% would be represented as (40 + 500000 / 1e6).
      type: object
      properties:
        percent:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 1
        micro_percent:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
    Server.UserInfo:
      description: |-
        owner, the current owner, empty if not owned description, provided at the time ownership
      type: object
      properties:
        owner:
          description: |-
            TBD
          type: string
          x-field-uid: 1
        description:
          description: |-
            TBD
          type: string
          x-field-uid: 2
    Stream.FramePreemptionType:
      description: |-
        Models parameters to support Tx Frame Preemption
      type: object
      properties:
        smd_type:
          description: |-
            TBD
          type: string
          x-enum:
            kExpress:
              x-field-uid: 1
            kAutoSMD:
              x-field-uid: 2
            kAutoSMDS:
              x-field-uid: 3
            kAutoSMDC:
              x-field-uid: 4
            kSMDS0:
              x-field-uid: 5
            kSMDS1:
              x-field-uid: 6
            kSMDS2:
              x-field-uid: 7
            kSMDS3:
              x-field-uid: 8
            kSMDC0:
              x-field-uid: 9
            kSMDC1:
              x-field-uid: 10
            kSMDC2:
              x-field-uid: 11
            kSMDC3:
              x-field-uid: 12
            kVerify:
              x-field-uid: 13
            kRespond:
              x-field-uid: 14
            kInvalid:
              x-field-uid: 15
          x-field-uid: 1
        frag_count:
          description: |-
            TBD
          type: string
          x-enum:
            kFragCount0:
              x-field-uid: 1
            kFragCount1:
              x-field-uid: 2
            kFragCount2:
              x-field-uid: 3
            kFragCount3:
              x-field-uid: 4
            kFragCountAuto:
              x-field-uid: 5
          x-field-uid: 2
        crc_type:
          description: |-
            TBD
          type: string
          x-enum:
            kmCRC:
              x-field-uid: 1
            kFCS:
              x-field-uid: 2
          x-field-uid: 3
    Stream.ChecksumDataType:
      description: |-
        TBD
      type: object
      properties:
        checksum_type:
          description: |-
            TBD
          type: string
          x-enum:
            kEthernetFCS:
              x-field-uid: 1
            kL23Checksum:
              x-field-uid: 2
            kL4Checksum:
              x-field-uid: 3
          x-field-uid: 1
        checksum_offset:
          description: |-
            Checksum field offset relative to the  start of the header.
          type: integer
          format: int32
          x-field-uid: 2
        data_offset:
          description: |-
            Where to start calculating checksum, payload or header.
          type: integer
          format: int32
          x-field-uid: 3
        data_length:
          description: |-
            Over how many bytes to calculate checksum.
          type: integer
          format: int32
          x-field-uid: 4
        checksum_error:
          description: |-
            Command HW to insert error if requested.
          type: string
          x-enum:
            kNoError:
              x-field-uid: 1
            kBadChecksum:
              x-field-uid: 2
          x-field-uid: 5
        include_payload:
          description: |-
            Protocol checksum is calculated including the protocol payload.
          type: boolean
          x-field-uid: 6
        is_pseudo_header:
          description: |-
            Protocol checksum is calculated using a pseudoheader.
          type: boolean
          x-field-uid: 7
        is_udp_mode:
          description: |-
            Protocol checksum initial value is converted from 0 to -1 by UDP only.
          type: boolean
          x-field-uid: 8
        pseudo_header_info:
          description: |-
            Holds information to retrieve the pseudo-header field values
          $ref: "#/components/schemas/Stream.PseudoHeaderFieldList"
          x-field-uid: 9
    Stream.StreamUpdateConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        stream_id:
          description: |-
            The identifier of the stream to which the following configuration   pertains.
          $ref: "#/components/schemas/IdType.StreamId"
          x-field-uid: 1
        configuration_data:
          description: |-
            Provide the configuration data for this stream. This field may   be absent if only the state of the stream needs to be changed.
          $ref: "#/components/schemas/Stream.ConfigurationUpdateDataType"
          x-field-uid: 2
    Capture.DataPatternType:
      description: |-
        TBD
      type: object
      properties:
        anchor:
          description: |-
            Select the position from which to anchor the offset.
          type: string
          x-enum:
            kStartOfFrame:
              x-field-uid: 1
            kStartOfIP:
              x-field-uid: 2
            kStartOfProtocol:
              x-field-uid: 3
          x-field-uid: 1
        offset:
          description: |-
            Offset to begin matching from the anchor.
          type: integer
          format: int32
          x-field-uid: 2
        pattern:
          description: |-
            Only frames that contain this pattern at the specified offset   are filtered, captured or counted.
          type: string
          x-field-uid: 3
        select:
          description: |-
            A bit mask that allows to specify which bits of the pattern   should be selected for matching in the pattern.
          type: string
          x-field-uid: 4
    MacSec.TxScConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        sc_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.SecureChannelId"
          x-field-uid: 1
        aes_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kGcm128:
              x-field-uid: 1
            kGcm256:
              x-field-uid: 2
            kXpn128:
              x-field-uid: 3
            kXpn256:
              x-field-uid: 4
          x-field-uid: 2
        confidentiality_offset:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 3
        sec_tag_offset:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 4
        switchover_point_pn:
          description: |-
            When Pn reaches a switchover point, the other Key is enabled. From here, we enter a state where both Keys alternate.
          type: integer
          format: int64
          x-field-uid: 5
        max_pn:
          description: |-
            When the first PN reaches the Expire point, the first Key is disabled and goes stale.
          type: integer
          format: int64
          x-field-uid: 6
        enable_continuous_pn_mode:
          description: |-
            True: Transmit ignores Pn rollovers and switchovers and simply lets Pn never expire. AN Index will not switch in this state.  This mode bit allows us to setup a key on Tx/Rx and let it run forever with no software key management  False: Normal behavior.
          type: boolean
          x-field-uid: 7
        enable_tx_arm_trigger:
          description: |-
            True: Ready this SC to toggle Keys upon a trigger command. False: Don't cosider the trigger timer.
          type: boolean
          x-field-uid: 8
        unauthenticated_data_config:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.UnauthenticatedDataConfigurationType"
          x-field-uid: 9
    MacSec.RxSaKeyConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        sc_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.SecureChannelId"
          x-field-uid: 1
        enable_key0:
          description: |-
            TBD
          type: boolean
          x-field-uid: 2
        key0:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.KeyConfigurationType"
          x-field-uid: 3
        enable_key1:
          description: |-
            TBD
          type: boolean
          x-field-uid: 4
        key1:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.KeyConfigurationType"
          x-field-uid: 5
    Port.PortConfigurationStreamsType:
      description: |-
        TBD
      type: object
      properties:
        transmit_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kPacketStreams:
              x-field-uid: 1
            kPacketFlows:
              x-field-uid: 2
            kAdvancedScheduler:
              x-field-uid: 3
            kEcho:
              x-field-uid: 4
          x-field-uid: 1
        enable_repeatable_last_random_pattern:
          description: |-
            TBD
          type: boolean
          x-field-uid: 2
        instrumentation_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kModeEndOfFrame:
              x-field-uid: 1
            kModeFloating:
              x-field-uid: 2
          x-field-uid: 3
        data_center_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.DataCenterConfigurationType"
          x-field-uid: 4
        line_speed:
          description: |-
            IxOS port speed in bits.
          type: integer
          format: int64
          x-field-uid: 5
    Stream.QuadGaussianControlType:
      description: |-
        TBD
      type: object
      properties:
        first_gaussian:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.QuadGaussianPacketDataType"
          x-field-uid: 1
        second_gaussian:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.QuadGaussianPacketDataType"
          x-field-uid: 2
        third_gaussian:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.QuadGaussianPacketDataType"
          x-field-uid: 3
        fourth_gaussian:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.QuadGaussianPacketDataType"
          x-field-uid: 4
    Stream.PseudoHeaderField:
      description: |-
        TBD
      type: object
      properties:
        mode:
          description: |-
            -    kFixed is ProtocolNumber in Pseudoheader, pseudoValue will carry the value, Ex ProtocolNumber in Pseudoheader   -    kLengthInsertion is length field in TCP/UDP Pseudo header, Ex length field in TCP/UDP Pseudo header   -    kPartOfBackgroundData Anything else which is part of the packet, Anything else which is part of the packet
          type: string
          x-enum:
            kFixed:
              x-field-uid: 1
            kLengthInsertion:
              x-field-uid: 2
            kPartOfBackgroundData:
              x-field-uid: 3
          x-field-uid: 1
        offset:
          description: |-
            offset into the background data where the value of the  pseudo header field is located, valid only if mode is kPartOfBackgroundData
          type: integer
          format: int32
          x-field-uid: 2
        length:
          description: |-
            The field length in bytes. This should be used when reading from background data.   Valid only if mode is kPartOfBackgroundData or kLengthInsertion
          type: integer
          format: int32
          x-field-uid: 3
        pseudo_value:
          description: |-
            Holds the the pseudo field value as a byte array. Should be used only when the mode is kFixed or kLengthInsertion
          type: string
          x-field-uid: 4
    Stream.TrafficConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        gap_control_mode:
          description: |-
            For ports that have the portFeatureGapControlMode capability, this   controls the manner in which minimum inter-packet gaps are enforced.
          type: string
          x-enum:
            kStreamGapControlFixed:
              x-field-uid: 1
            kStreamGapControlAverage:
              x-field-uid: 2
          x-field-uid: 1
        streams:
          description: |-
            A list of configurations for each of the streams. The number   of streams supported on this port is determined from   STREAM-COUNT.
          $ref: "#/components/schemas/Stream.StreamConfigurationList"
          x-field-uid: 2
    Udf.KillBitListType:
      description: |-
        TBD
      type: object
      properties:
        udf_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.UdfId"
          x-field-uid: 1
        kill_bits:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.UdfMVDataType"
          x-field-uid: 2
    Capture.FrameSizeRangeType:
      description: |-
        TBD
      type: object
      properties:
        is_enabled:
          description: |-
            States if Range is Enabled or Not.
          type: boolean
          x-field-uid: 1
        is_in_range:
          description: |-
            States if Filter should applied in given range or out of given range.  If True: Greater Than "from" AND Less Than "to"  If False: Less Than "from" OR Greater Than "to"
          type: boolean
          x-field-uid: 2
        from:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 3
        to:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 4
    Feature.AttributeType:
      description: |-
        TBD
      type: object
      properties:
        value:
          description: |-
            TBD
          type: string
          x-field-uid: 1
        dependency:
          description: |-
            TBD
          type: string
          x-field-uid: 2
    IdType.SecureChannelId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            The SecureChannelId is a unique id used by MACSEC feature to know     the number of the SA index which it will configure.     It could be 0 to 255 for ingress traffic.     It could be 0 to 7 for egress traffic.     Egress Style Traffic - Any traffic entering the Rx side of the engine that is driven by a DUT with generally unknown formats.     Ingress Style Traffic - Any traffic entering the Rx side of the engine that is driven by an Ixia card where we generally know the packet formats.
          type: integer
          format: int32
          x-field-uid: 1
    PacketGroup.ConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        delay_variation_mode:
          description: |-
            Selects Delay Variation measurement mode (under Latency/Jitter   Measurement). This is only available when measurementMode is set to   packetGroupModeDelayVariation.   Note: When Delay Variation mode is selected, then under Sequence   Checking the only available option is Threshold Sequence Checking.
          type: string
          x-enum:
            kDelayVariationWithSequenceErrors:
              x-field-uid: 1
            kDelayVariationWithLatencyMinMax:
              x-field-uid: 2
            kDelayVariationWithLatencyAvg:
              x-field-uid: 3
          x-field-uid: 1
        enable128k_bin_mode:
          description: |-
            If true, then the length of the packet group ID field is increased to 17 bits.
          type: boolean
          x-field-uid: 2
        enable_group_id_mask:
          description: |-
            Enables the use of the groupId mask.
          type: boolean
          x-field-uid: 3
        enable_insert_pgid:
          description: |-
            Enables inserting the PGID into the packet.
          type: boolean
          x-field-uid: 4
        enable_last_bit_time_stamp:
          description: |-
            If true, enables selection of last bit time stamp. If false,   the first bit time stamp is used.
          type: boolean
          x-field-uid: 5
        enable_latency_bins:
          description: |-
            Enables the use of latency bins on receive.
          type: boolean
          x-field-uid: 6
        enable_re_arm_first_time_stamp:
          description: |-
            Enables the use of re-arm first time stamp.
          type: boolean
          x-field-uid: 7
        enable_rx_filter:
          description: |-
            Enables the use of the headerFilterMask mask.
          type: boolean
          x-field-uid: 8
        enable_signature_mask:
          description: |-
            Enables the use of the signatureMask mask.
          type: boolean
          x-field-uid: 9
        group_id:
          description: |-
            Unique value used to identify one packet group for another.   Up to 57344 different packet groups may be defined.
          type: integer
          format: int32
          x-field-uid: 10
        group_id_mask:
          description: |-
            A 16-bit mask applied to the packet group ID.   Bits set in the mask are cleared in the received group ID.
          type: integer
          format: int32
          x-field-uid: 11
        group_id_mode:
          description: |-
            This option provides a convenience mechanism for setting   the groupIdOffset and groupIdMask.
          type: string
          x-enum:
            kPacketGroupCustom:
              x-field-uid: 1
            kPacketGroupDscp:
              x-field-uid: 2
            kPacketGroupIpV6TrafficClass:
              x-field-uid: 3
            kPacketGroupMplsExp:
              x-field-uid: 4
            kPacketGroupSplit:
              x-field-uid: 5
          x-field-uid: 12
        group_id_offset:
          description: |-
            The offset, within the packet, of the group id value.
          type: integer
          format: int32
          x-field-uid: 13
        header_filter:
          description: |-
            A set of 16 bytes used to match the header of packets to be   considered for signature masking.
          type: string
          x-field-uid: 14
        header_filter_mask:
          description: |-
            A mask to be applied to the HeaderFilter. Bits set in the mask are ignored in the match.
          type: string
          x-field-uid: 15
        ignore_signature:
          description: |-
            In receive mode, the signature field is not matched and all   packets are counted.
          type: boolean
          x-field-uid: 16
        update_time_stamp_mode:
          description: |-
            (1)First/Last Timestamp will be updated on Sequence Checking Error.   (0)Otherwise First/Last Timestamp updated on every Frame received.
          type: string
          x-enum:
            kTimeStampForEntirePGID:
              x-field-uid: 1
            kUpdateTimeStampOnError:
              x-field-uid: 2
          x-field-uid: 17
        insert_sequence_signature:
          description: |-
            Inserts a sequence signature into the packet as indicated by   signatureOffset, signatureValue, groupIdOffset, signatureNumberOffset   and allocateUdf.
          type: boolean
          x-field-uid: 18
        insert_signature:
          description: |-
            Inserts the packet group signature into the transmitted stream.   Note: For calculating latency values need to configure stream config -fir true.
          type: boolean
          x-field-uid: 19
        ieee_preamble_match:
          description: |-
            Allow preambles that are IEEE standard to match.
          type: boolean
          x-field-uid: 20
        latency_bins:
          description: |-
            If enableLatencyBins is true, this list of latencies (in milliseconds) indicates   the dividing line between latency bins. There is one fewer   dividing times than latency bins. The first bin always starts   at 0 and the last bin always ends at the maximum possible latency.   The list is sorted before use. There must not be any duplicate values.
          $ref: "#/components/schemas/PacketGroup.LatencyBinList"
          x-field-uid: 21
        size_bins_rx:
          description: |-
            If enableSizeBins is true, the corresponding list will contain integer   frame size values in ascending order.
          $ref: "#/components/schemas/PacketGroup.SizeBinsType"
          x-field-uid: 22
        latency_control:
          description: |-
            Defines the mechanism used to calculate latency.
          type: string
          x-enum:
            kCutThrough:
              x-field-uid: 1
            kStoreAndForward:
              x-field-uid: 2
            kInterArrivalJitter:
              x-field-uid: 3
            kFirstInLastOut:
              x-field-uid: 4
            kLastInLastOut:
              x-field-uid: 5
          x-field-uid: 23
        measurement_mode:
          description: |-
            Defines the measurement mode used to calculate latency.
          type: string
          x-enum:
            kPacketGroupModeLatency:
              x-field-uid: 1
            kPacketGroupModeInterArrivalTime:
              x-field-uid: 2
            kPacketGroupModeDelayVariation:
              x-field-uid: 3
          x-field-uid: 24
        preamble_size:
          description: |-
            Length of preamble, in bytes, of received frame.
          type: integer
          format: int32
          x-field-uid: 25
        seq_adv_tracking_late_threshold:
          description: |-
            Sets a threshold to track the expected sequence value. The Late   Threshold value is subtracted from the expected sequence number   when the received sequence numbers are less than the late threshold   value.
          type: integer
          format: int32
          x-field-uid: 26
        sequence_error_threshold:
          description: |-
            The threshold value used to determine whether a sequence   error has occurred.
          type: integer
          format: int32
          x-field-uid: 27
        sequence_checking_mode:
          description: |-
            The manner in which sequence checking is performed.
          type: string
          x-enum:
            kSeqThreshold:
              x-field-uid: 1
            kSeqMultiSwitchedPath:
              x-field-uid: 2
            kSeqAdvTracking:
              x-field-uid: 3
          x-field-uid: 28
        sequence_number_offset:
          description: |-
            The offset within the packet of the sequence number. This is   valid only when sequence checking is enabled.
          type: integer
          format: int32
          x-field-uid: 29
        signature:
          description: |-
            In the transmitted packet, the signature uniquely signs the   transmitted packet as one destined for packet group filtering   on the receive port. On the receive port, the signature is   used to filter only those packets that have a matching signature   and the minimum, maximum and average latencies are obtained for those   packets.
          type: string
          x-field-uid: 30
        signature_mask:
          description: |-
            A mask applied to the signature. Bits set in the mask are ignored.
          type: string
          x-field-uid: 31
        signature_offset:
          description: |-
            The offset, within the packet, of the packet group signature.
          type: integer
          format: int32
          x-field-uid: 32
        split_packet_groups:
          description: |-
            Used to configure split packet groups in Rx.   Up to 17 bytes can be configured in three separate chunks.
          $ref: "#/components/schemas/PacketGroup.SplitPacketGroupList"
          x-field-uid: 33
        pgid_stat_mode:
          description: |-
            Switch between normal and limited latency mode.
          type: string
          x-enum:
            k4KStatMode:
              x-field-uid: 1
            k32KStatMode:
              x-field-uid: 2
          x-field-uid: 34
    Server.EventInfo:
      description: |-
        TBD
      type: object
      properties:
        event_kind:
          description: |-
            TBD
          type: string
          x-enum:
            kOwnership:
              x-field-uid: 1
            kLink:
              x-field-uid: 2
            kCPUStatus:
              x-field-uid: 3
            kCapture:
              x-field-uid: 4
            kTransmit:
              x-field-uid: 5
            kStreamRate:
              x-field-uid: 6
            kLineSpeed:
              x-field-uid: 7
          x-field-uid: 1
        old_value:
          description: |-
            TBD
          type: string
          x-field-uid: 2
        new_value:
          description: |-
            TBD
          type: string
          x-field-uid: 3
        port_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 4
    Stream.BackgroundDataConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.BackgroundDataSettingList"
          x-field-uid: 1
    Capture.ConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        direction:
          description: |-
            TBD
          type: string
          x-enum:
            kRx:
              x-field-uid: 1
            kTx:
              x-field-uid: 2
            kBidirectional:
              x-field-uid: 3
          x-field-uid: 1
        settings:
          description: |-
            TBD
          $ref: "#/components/schemas/Capture.SettingsType"
          x-field-uid: 2
        patterns:
          description: |-
            TBD
          $ref: "#/components/schemas/Capture.PatternList"
          x-field-uid: 3
        expressions:
          description: |-
            TBD
          $ref: "#/components/schemas/Capture.ExpressionList"
          x-field-uid: 4
        rxsharedstat1:
          description: |-
            Rx Shared Stat 1
          type: string
          x-enum:
            kInvalidDelimiter:
              x-field-uid: 1
            kInvalidFrames:
              x-field-uid: 2
            kInvalidSize:
              x-field-uid: 3
            kNormalSizeBadFCCRC:
              x-field-uid: 4
            kNormalSizeGoodFCCRC:
              x-field-uid: 5
            kUndersizeBadFCCRC:
              x-field-uid: 6
            kUndersizeGoodFCCRC:
              x-field-uid: 7
            kValidFrames:
              x-field-uid: 8
          x-field-uid: 5
        rxsharedstat2:
          description: |-
            Rx Shared Stat 2
          type: string
          x-enum:
            kInvalidDelimiter:
              x-field-uid: 1
            kInvalidFrames:
              x-field-uid: 2
            kInvalidSize:
              x-field-uid: 3
            kNormalSizeBadFCCRC:
              x-field-uid: 4
            kNormalSizeGoodFCCRC:
              x-field-uid: 5
            kUndersizeBadFCCRC:
              x-field-uid: 6
            kUndersizeGoodFCCRC:
              x-field-uid: 7
            kValidFrames:
              x-field-uid: 8
          x-field-uid: 6
    IdType.CaptureFilterId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            Each capture filter within a capture buffer is identified with   a capture filter id to allow the client to name each of the filters.
          type: integer
          format: int32
          x-field-uid: 1
    MacSec.RxMacSecGlobalPortConfigType:
      description: |-
        TBD
      type: object
      properties:
        enable_global_config:
          description: |-
            TBD
          type: boolean
          x-field-uid: 1
        rx_egress_mgid_ca_source:
          description: |-
            True = The SC Index (as determined by a brute force lookup) is used as the CA portion   of the Split MGID Field   False =  The CA portion of the Split MGID comes from the MGID * CA Extraction.
          type: boolean
          x-field-uid: 2
        rx_mac_sec_traffic_type:
          description: |-
            It can be either Egress or Ingress traffic.   One port can activate only one functionality.
          type: string
          x-enum:
            kIngress:
              x-field-uid: 1
            kEgress:
              x-field-uid: 2
          x-field-uid: 3
        sectag_offset0:
          description: |-
            Offset from Start of Packet in bytes
          type: integer
          format: int32
          x-field-uid: 4
        sectag_offset1:
          description: |-
            Offset from Start of Packet in bytes
          type: integer
          format: int32
          x-field-uid: 5
        replay_protection:
          description: |-
            True = Replay Protection Enabled   False = Replay Protection Disabled
          type: boolean
          x-field-uid: 6
        rx_mgid_config:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.RxMGIDConfigurationType"
          x-field-uid: 7
        unauthenticated_data0_config:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.UnauthenticatedDataConfigurationType"
          x-field-uid: 8
        unauthenticated_data1_config:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.UnauthenticatedDataConfigurationType"
          x-field-uid: 9
    Port.ReceiveConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        rx_mode:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.RxModeSet"
          x-field-uid: 1
        enable_auto_detect_instrumentation:
          description: |-
            TBD
          type: boolean
          x-field-uid: 2
        enable_tx_rx_sync:
          description: |-
            TBD
          type: boolean
          x-field-uid: 3
        tx_rx_sync_interval:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.MilliSecondsType"
          x-field-uid: 4
        packet_group_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/PacketGroup.ConfigurationType"
          x-field-uid: 5
        data_integrity_rx_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/DataIntegrityRx.ConfigurationType"
          x-field-uid: 6
        rx_auto_instrumentation:
          description: |-
            TBD
          $ref: "#/components/schemas/RxAutoInstrumentation.ConfigurationType"
          x-field-uid: 7
        rate_monitoring_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/RateMonitoring.RateMonitoringList"
          x-field-uid: 8
    Stream.StreamValueListSettingType:
      description: |-
        TBD
      type: object
      properties:
        stream_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.StreamId"
          x-field-uid: 1
        value_list:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.ValueList"
          x-field-uid: 2
    MacSec.UnauthenticatedDataConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        first_byte_offset:
          description: |-
            Index of the first byte of the unauthenticated data
          type: integer
          format: int32
          x-field-uid: 1
        last_byte_offset:
          description: |-
            Index of the last byte of the unauthenticated data
          type: integer
          format: int32
          x-field-uid: 2
    Stream.TxDelayType:
      description: |-
        Model a packet transmission delay.
      type: object
      properties:
        duration:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 1
        precise_duration:
          description: |-
            TBD
          type: number
          format: double
          x-field-uid: 2
        units:
          description: |-
            TBD
          type: string
          x-enum:
            kNanoSeconds:
              x-field-uid: 1
            kBytes:
              x-field-uid: 2
            kTicks:
              x-field-uid: 3
          x-field-uid: 3
    Stream.RateControlType:
      description: |-
        TBD
      type: object
      properties:
        rate_mode:
          description: |-
            Specifies whether to use the ifg or percentPacketRate to calculate   stream gap.
          type: string
          x-enum:
            kStreamRateModeGap:
              x-field-uid: 1
            kStreamRateModePercentRate:
              x-field-uid: 2
            kStreamRateModeFps:
              x-field-uid: 3
            kStreamRateModeBps:
              x-field-uid: 4
          x-field-uid: 1
        percent_packet_rate:
          description: |-
            If rateMode is set to kUsePercentRate, then use this value as a   percent of maximum transmit rate for this stream. This command   sets all three gaps: IFG, IBG and ISG.
          $ref: "#/components/schemas/PFType.PercentType"
          x-field-uid: 2
        fps_rate:
          description: |-
            If rateMode is set to streamRateModeFps, then use this value the   desired frames per second.
          type: number
          format: double
          x-field-uid: 3
        bps_rate:
          description: |-
            If rateMode is set to kStreamRateModeBps, then use this value for the   desired bits per second.
          type: number
          format: double
          x-field-uid: 4
    Stream.FrameControlType:
      description: |-
        TBD
      type: object
      properties:
        frame_preemption_type:
          description: |-
            Models parameters to support Tx Frame Preemption
          $ref: "#/components/schemas/Stream.FramePreemptionType"
          x-field-uid: 1
        frame_size_type:
          description: |-
            TBD
          type: string
          x-enum:
            kSizeFixed:
              x-field-uid: 1
            kSizeRandom:
              x-field-uid: 2
            kSizeIncr:
              x-field-uid: 3
            kSizeAuto:
              x-field-uid: 4
          x-field-uid: 2
        frame_type:
          description: |-
            The type field in the Ethernet frame, which does not apply to the   MAC layer frames.
          type: integer
          format: int32
          x-field-uid: 3
        average_frame_size:
          description: |-
            The computed average number of bytes per frame. This will equal   frameSize in simple cases, but will have a fractional component   in more complex scenarios.
          $ref: "#/components/schemas/PFType.FixedPoint16"
          x-field-uid: 4
        frame_size:
          description: |-
            Number of bytes in each frame in the stream. If frameSizeType is   set to sizeFixed, all frames in the stream have the same size. If   frameSizeType is set to sizeIncr then the initial frame has this size.
          type: integer
          format: int32
          x-field-uid: 5
        frame_size_step:
          description: |-
            If frameSizeType is set to sizeIncr and the load module supports an   arbitrary step size, then this is the value to increment the frame   size by for each repetition.
          type: integer
          format: int32
          x-field-uid: 6
        frame_size_count:
          description: |-
            If frameSizeType is set to sizeIncr and the load module supports an   arbitrary step size, then the frame is incremented this many times   before resetting.
          type: integer
          format: int32
          x-field-uid: 7
        frame_size_max:
          description: |-
            The maximum frame size to be used when frame size of type sizeRandom   is selected.
          type: integer
          format: int32
          x-field-uid: 8
        frame_size_min:
          description: |-
            The minimum frame size to be used when frame size of type sizeRandom   is selected.
          type: integer
          format: int32
          x-field-uid: 9
        enforce_min_gap:
          description: |-
            When a port which supports this feature is in Advanced Scheduler Mode,   then this is the minimum gap that is ever inserted between packets.   The smallest value supported is 3.
          type: integer
          format: int64
          x-field-uid: 10
        preamble_data:
          description: |-
            (10 Gigabit modules only) The 8 bytes in the preamble of the   10 Gigabit Ethernet frame. For SFD Detect Mode, Bytes 2 through 7   are configurable. For Byte Count Mode, Bytes 2 through 8 are   configurable. There must be at least two bytes in the preamble,   and at most 255.
          type: string
          x-field-uid: 11
        preamble_data_length:
          description: |-
            preambleDataLength field is length of preambleData will be used    in custom preamble feature.
          type: integer
          format: int32
          x-field-uid: 12
        pattern_type:
          description: |-
            Type of given patterns that is inserted in all the frames   transmitted on this stream.
          type: string
          x-enum:
            kRandom:
              x-field-uid: 1
            kIncrByte:
              x-field-uid: 2
            kIncrWord:
              x-field-uid: 3
            kDecrByte:
              x-field-uid: 4
            kDecrWord:
              x-field-uid: 5
            kPattern:
              x-field-uid: 6
            kRepeatPattern:
              x-field-uid: 7
          x-field-uid: 13
        fcs_error:
          description: |-
            The FCS error to be inserted in the frame.
          type: string
          x-enum:
            kStreamErrorGood:
              x-field-uid: 1
            kStreamErrorAlignment:
              x-field-uid: 2
            kStreamErrorDribble:
              x-field-uid: 3
            kStreamErrorBadCRC:
              x-field-uid: 4
            kStreamErrorNoCRC:
              x-field-uid: 5
          x-field-uid: 14
        enable_timestamp:
          description: |-
            If true, 6 bytes of timestamp are inserted before the CRC of the frame.   This was previously known as the fir option, which is now deprecated.
          type: boolean
          x-field-uid: 15
        random_size_control_type:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.RandomSizeControlType"
          x-field-uid: 16
    TableUdf.ColId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 1
    Udf.IPv4SettingType:
      description: |-
        TBD
      type: object
      properties:
        init_val:
          description: |-
            The initial value of the counter.
          type: integer
          format: int64
          x-field-uid: 1
        repeat_value:
          description: |-
            The number of times each value is repeated for each iteration.
          type: integer
          format: int64
          x-field-uid: 2
        value_step:
          description: |-
            The amount to increment value for each repitition.
          type: integer
          format: int64
          x-field-uid: 3
        repeat_loop:
          description: |-
            The number iterations of the loop. This number must be at least 1.
          type: integer
          format: int64
          x-field-uid: 4
        mask:
          description: |-
            Tells how many bits from LSB are to skip while counting,if calculated   value has all zeros or all ones.
          type: integer
          format: int32
          x-field-uid: 5
        continuously_counting:
          description: |-
            If this option is set to true, then the outerRepetitions value   is ignored and the UDF does not reset to initVal but continuously   counts.
          type: boolean
          x-field-uid: 6
        skip_zeros_and_ones:
          description: |-
            Decides if the counter wants to skip the values that match with the Mask.
          type: boolean
          x-field-uid: 7
    Capture.MacPatternType:
      description: |-
        TBD
      type: object
      properties:
        address:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 1
        select:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 2
    MacSec.SaKeyStateConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        sc_id:
          description: |-
            It could be 0 to 255.
          $ref: "#/components/schemas/IdType.SecureChannelId"
          x-field-uid: 1
        key_id:
          description: |-
            It could be 0 or 1.
          $ref: "#/components/schemas/IdType.KeyId"
          x-field-uid: 2
        key_status:
          description: |-
            TBD
          type: string
          x-enum:
            kExpired:
              x-field-uid: 1
            kActive:
              x-field-uid: 2
            kFresh:
              x-field-uid: 3
          x-field-uid: 3
    PFType.RevisionType:
      description: |-
        TBD
      type: object
      properties:
        branch:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 1
        build:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
    Port.PfcPriorityQueueMapType:
      description: |-
        TBD
      type: object
      properties:
        priority0:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcPriorityQueueType"
          x-field-uid: 1
        priority1:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcPriorityQueueType"
          x-field-uid: 2
        priority2:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcPriorityQueueType"
          x-field-uid: 3
        priority3:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcPriorityQueueType"
          x-field-uid: 4
        priority4:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcPriorityQueueType"
          x-field-uid: 5
        priority5:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcPriorityQueueType"
          x-field-uid: 6
        priority6:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcPriorityQueueType"
          x-field-uid: 7
        priority7:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcPriorityQueueType"
          x-field-uid: 8
    MacSec.RxMacSecSaKeyStatusType:
      description: |-
        TBD
      type: object
      properties:
        sc_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.SecureChannelId"
          x-field-uid: 1
        key0_status:
          description: |-
            TBD
          type: string
          x-enum:
            kExpired:
              x-field-uid: 1
            kActive:
              x-field-uid: 2
            kFresh:
              x-field-uid: 3
          x-field-uid: 2
        lpn0:
          description: |-
            Current State of the LPN value for the Key0 of SA.   Only the lower 32 bits are valid for GCM modes.
          type: integer
          format: int64
          x-field-uid: 3
        key1_status:
          description: |-
            TBD
          type: string
          x-enum:
            kExpired:
              x-field-uid: 1
            kActive:
              x-field-uid: 2
            kFresh:
              x-field-uid: 3
          x-field-uid: 4
        lpn1:
          description: |-
            Current State of the LPN value for the Key1 of SA.   Only the lower 32 bits are valid for GCM modes.
          type: integer
          format: int64
          x-field-uid: 5
    Stream.AutodetectSignatureTxType:
      description: |-
        TBD
      type: object
      properties:
        insert_signature:
          description: |-
            Indicates that the Auto instrumentation signature shall be inserted into the   transmitted stream.
          type: boolean
          x-field-uid: 1
        signature:
          description: |-
            In the transmitted packet, the signature uniquely identifies the   transmitted packet as one destined for receive port filtering.
          type: string
          x-field-uid: 2
        signature_offset:
          description: |-
            The offset, within the packet, of the signature.
          type: integer
          format: int32
          x-field-uid: 3
    Capture.ExpressionType:
      description: |-
        TBD
      type: object
      properties:
        expression_kind:
          description: |-
            The expressionKind indicates the type of expression stored   in the ExpressionType.      The expression can be a trigger, a filter or an UDS.
          type: string
          x-enum:
            kUds:
              x-field-uid: 1
            kTrigger:
              x-field-uid: 2
            kFilter:
              x-field-uid: 3
          x-field-uid: 1
        error_match:
          description: |-
            TBD
          type: string
          x-enum:
            kAnyFrame:
              x-field-uid: 1
            kErrGoodFrame:
              x-field-uid: 2
            kErrBadCRC:
              x-field-uid: 3
            kErrBadFrame:
              x-field-uid: 4
            kErrAnySequenceError:
              x-field-uid: 5
            kErrSmallSequenceError:
              x-field-uid: 6
            kErrBigSequenceError:
              x-field-uid: 7
            kErrReverseSequenceError:
              x-field-uid: 8
            kErrDataIntegrityError:
              x-field-uid: 9
            kErrAnyIpTcpUdpChecksumError:
              x-field-uid: 10
            kErrReverseDuplicatePacket:
              x-field-uid: 11
            kErrSequenceGap:
              x-field-uid: 12
            kErrCdlErrors:
              x-field-uid: 13
            kErrFCoEInvalidFrame:
              x-field-uid: 14
          x-field-uid: 2
        frame_size_range:
          description: |-
            The FrameSizeRange can optionally be specified to restrict   the filter to only those frames with matching sizes.
          $ref: "#/components/schemas/Capture.FrameSizeRangeType"
          x-field-uid: 3
        sonet_circuit_list:
          description: |-

          type: string
          x-enum:
            kAnyCircuit:
              x-field-uid: 1
            kCircuitList:
              x-field-uid: 2
          x-field-uid: 4
        filter_content:
          description: |-
            The ExpressionContent contains the "UDS Filter" as a     list of expressionElementType-s.
          $ref: "#/components/schemas/Capture.ExpressionContent"
          x-field-uid: 5
        is_expression_enabled:
          description: |-
            States if "UDS Filter Expression" need to be programmed.  If yes then "UDS Filter" will be ignored.
          type: boolean
          x-field-uid: 6
        filter_expression_content:
          description: |-
            The ExpressionContent contains the "UDS Filter Expression" as a  list of expressionElementType-s.
          $ref: "#/components/schemas/Capture.ExpressionContent"
          x-field-uid: 7
        expression_parser_type:
          description: |-
            This expression parser type specify how to parse and programme  "filterExpressionContent".
          type: string
          x-enum:
            kSimpleExpressionParser:
              x-field-uid: 1
            kComplexExpressionParser:
              x-field-uid: 2
            kTokaidoExpressionParser:
              x-field-uid: 3
          x-field-uid: 8
    PFType.VersionType:
      description: |-
        Model the version used to identify the API. The release number components (Major.Minor release number) identifies the maturity of the API. A client compiled with release (A.B) can use a server providing release (C.D) iff A equals C and B less than or equal to D. In other words, an "old client" can use a "new server". The revision number components (Branch.Build revision number) identifies the particular revision of the API conforming to the API release number.
      type: object
      properties:
        release:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.ReleaseType"
          x-field-uid: 1
        revision:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.RevisionType"
          x-field-uid: 2
    PacketGroup.PGIDRange:
      description: |-
        TBD
      type: object
      properties:
        start:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.PacketGroupId"
          x-field-uid: 1
        end:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.PacketGroupId"
          x-field-uid: 2
    Port.PortConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        basic_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.BasicConfigurationType"
          x-field-uid: 1
        transmit_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.TransmitConfigurationType"
          x-field-uid: 2
        receive_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.ReceiveConfigurationType"
          x-field-uid: 3
        pause_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PauseConfigurationType"
          x-field-uid: 4
        ethernet_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.EthernetConfigurationType"
          x-field-uid: 5
        data_center_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.DataCenterConfigurationType"
          x-field-uid: 6
        pfc_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcConfigurationType"
          x-field-uid: 7
        tx_lane_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.TxLaneConfigurationType"
          x-field-uid: 8
    Stream.DataIntegrityTxType:
      description: |-
        TBD
      type: object
      properties:
        enable:
          description: |-
            Indicates Whether data Integrity is Enabled or not.
          type: boolean
          x-field-uid: 1
        insert_signature:
          description: |-
            Indicates that the data integrity signature shall be inserted into the   transmitted stream.
          type: boolean
          x-field-uid: 2
        signature:
          description: |-
            In the transmitted packet, the signature uniquely identifies the    transmitted packet as one destined for receive port data integrity   filtering.  Default = '08 71 18 05'.
          type: string
          x-field-uid: 3
        signature_offset:
          description: |-
            The offset, within the packet, of the data integrity signature.
          type: integer
          format: int32
          x-field-uid: 4
        data_integrity_mode:
          description: |-
            Enables adding timestamp or data integrity checking as part of the   floating instrumentation header.
          type: string
          x-enum:
            kAuto:
              x-field-uid: 1
            kNumberOfBytesFromEndOfFrame:
              x-field-uid: 2
            kPayloadLength:
              x-field-uid: 3
          x-field-uid: 5
        num_bytes_from_end_of_frame:
          description: |-
            Specify the number of padding bytes needed from the end of the frame.   The number of padding bytes remains fixed with changing frame sizes.
          type: integer
          format: int32
          x-field-uid: 6
        payload_length:
          description: |-
            Specify the fixed data integrity payload length.  This length will not    change with changing frame sizes.
          type: integer
          format: int32
          x-field-uid: 7
    Stream.ConfigurationDataType:
      description: |-
        TBD
      type: object
      properties:
        stream_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.StreamControlType"
          x-field-uid: 1
        inter_frame_gap_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.InterFrameGapControlType"
          x-field-uid: 2
        rate_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.RateControlType"
          x-field-uid: 3
        inter_burst_gap_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.InterBurstGapControlType"
          x-field-uid: 4
        inter_stream_gap_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.InterStreamGapControlType"
          x-field-uid: 5
        dst_addr_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.DstAddrControlType"
          x-field-uid: 6
        src_addr_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.SrcAddrControlType"
          x-field-uid: 7
        frame_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.FrameControlType"
          x-field-uid: 8
        bgnd_data_control:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.BackgroundDataControlType"
          x-field-uid: 9
        protocol_headers:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.ProtocolHeaderInfoListType"
          x-field-uid: 10
        udf_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.UdfConfigurationType"
          x-field-uid: 11
        table_udf_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/TableUdf.TableUdfConfigurationType"
          x-field-uid: 12
        sequence_udf_configuration:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.SequenceUdfConfigurationType"
          x-field-uid: 13
        data_integrity_tx:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.DataIntegrityTxType"
          x-field-uid: 14
        autodetect_signature_tx:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.AutodetectSignatureTxType"
          x-field-uid: 15
        size_bins_tx:
          description: |-
            TBD
          $ref: "#/components/schemas/PacketGroup.SizeBinsType"
          x-field-uid: 16
        mac_sec:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.MacSecStreamControlType"
          x-field-uid: 17
    PFType.UTCTime:
      description: |-
        Model time using Posix Time (http://en.wikipedia.org/wiki/Unix_time) as the apparent number of seconds since 1970-01-01 00:00:00 +0000 (UTC). Note that this is unable to describe time during a leap second event. A value of zero, or a negative value, indicates an illegal time.
      type: object
      properties:
        time:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 1
    Stream.QuadGaussianFractionalDataType:
      description: |-
        TBD
      type: object
      properties:
        m_integer:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 1
        m_fractional:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
    Udf.SequenceUdfConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        enable:
          description: |-
            Enables the Sequence Number UDF function.
          type: boolean
          x-field-uid: 1
        byte_offset:
          description: |-
            The byte offset where the SequenceNumberUdf is placed.
          type: integer
          format: int32
          x-field-uid: 2
        associated_group_id:
          description: |-
            The group to which this stream belongs.
          $ref: "#/components/schemas/IdType.StreamGroupId"
          x-field-uid: 3
        associated_udf_id:
          description: |-
            The UDF that serves as the source for the flow number.
          $ref: "#/components/schemas/IdType.UdfId"
          x-field-uid: 4
        associated_udf_bit_position:
          description: |-
            Bit offset of the flow number within the associated Udf.
          type: integer
          format: int32
          x-field-uid: 5
        associated_udf_width:
          description: |-
            Width to use for the associated Udf. The value ranges from 1-32.
          type: integer
          format: int32
          x-field-uid: 6
        associated_udf_min:
          description: |-
            The minimum value of the associated Udf. Must be less than UdfMax.
          type: integer
          format: int32
          x-field-uid: 7
        associated_udf_max:
          description: |-
            The maximum value of the associated Udf.
          type: integer
          format: int32
          x-field-uid: 8
    Udf.ValueListType:
      description: |-
        TBD
      type: object
      properties:
        udf_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.UdfId"
          x-field-uid: 1
        values:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.UdfMVDataType"
          x-field-uid: 2
    Capture.PacketCountType:
      description: |-
        TBD
      type: object
      properties:
        direction:
          description: |-
            TBD
          type: string
          x-enum:
            kRx:
              x-field-uid: 1
            kTx:
              x-field-uid: 2
            kBidirectional:
              x-field-uid: 3
          x-field-uid: 1
        total_pkts:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
    PFType.FixedPoint16:
      description: |-
        This arithmetic type represents an unsigned fixed point number with 16 bits following the binary point.
      type: object
      properties:
        value:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 1
    Stream.InterStreamGapControlType:
      description: |-
        TBD
      type: object
      properties:
        enable_isg:
          description: |-
            TBD
          type: boolean
          x-field-uid: 1
        isg:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.GapTimeType"
          x-field-uid: 2
        isg_precise:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.GapPrecisionTimeType"
          x-field-uid: 3
    Stream.ConfigurationUpdateDataType:
      description: |-
        Used for updating individual pieces of the stream configuration. The flags indicates which piece should be overwritten on the stream.
      type: object
      properties:
        is_set_stream_control:
          description: |-
            TBD
          type: boolean
          x-field-uid: 1
        is_set_rate_control:
          description: |-
            TBD
          type: boolean
          x-field-uid: 2
        is_set_frame_control:
          description: |-
            TBD
          type: boolean
          x-field-uid: 3
        is_set_inter_burst_gap_control:
          description: |-
            TBD
          type: boolean
          x-field-uid: 4
        is_set_inter_stream_gap_control:
          description: |-
            TBD
          type: boolean
          x-field-uid: 5
        is_frame_size_increasing:
          description: |-
            TBD
          type: boolean
          x-field-uid: 6
        is_suspending_stream:
          description: |-
            TBD
          type: boolean
          x-field-uid: 7
        is_set_mac_sec:
          description: |-
            TBD
          type: boolean
          x-field-uid: 8
        data:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.ConfigurationDataType"
          x-field-uid: 9
    Stream.BackgroundDataType:
      description: |-
        TBD
      type: object
      properties:
        protocol:
          description: |-
            Specify the initial octets of the packets that determine the protocol   carried in this stream. The protocol will be followed by the octets   that form the rest of the octets in the packet.
          type: string
          x-field-uid: 1
        pattern:
          description: |-
            Specify a user-defined pattern of data to be transmitted on this   stream. The patternType must be set to kRepeatPattern or kPattern   otherwise this setting is ignored.
          type: string
          x-field-uid: 2
    Udf.SkipValueSettingType:
      description: |-
        TBD
      type: object
      properties:
        enable:
          description: |-
            If this option is set to true, the skipValue parameter will be skipped in the UDF.   Currently, this can only be enabled if the counter mode is random.   This is not supported on Jasper or Mazuma.
          type: boolean
          x-field-uid: 1
        skip_value_list:
          description: |-
            The values to skip in the UDF if enabled.   Currently, only 1 skip value per UDF is supported.   This is not supported on Jasper or Mazuma.
          $ref: "#/components/schemas/Udf.ListInt64"
          x-field-uid: 2
    Feature.FeatureGroupType:
      description: |-
        Features are collected together by Scope which includes: CARD   These features apply to the entire card. PORT N These features apply to the specified port. CAPTURE N   These features apply to the specified capture buffer.
      type: object
      properties:
        scope:
          description: |-
            TBD
          type: string
          x-field-uid: 1
        features:
          description: |-
            TBD
          $ref: "#/components/schemas/Feature.FeatureList"
          x-field-uid: 2
    PFType.NanoSecondsType:
      description: |-
        Model a duration in nanoseconds using a plain integer. This allows signed durations up to 300 years to expressed.
      type: object
      properties:
        nano_seconds:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 1
    Port.BasicConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        loopback:
          description: |-
            TBD
          type: string
          x-enum:
            kNormal:
              x-field-uid: 1
            kLoopback:
              x-field-uid: 2
            kLineLoopback:
              x-field-uid: 3
          x-field-uid: 1
        port_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kModeEthernet:
              x-field-uid: 1
            kMode10GigWan:
              x-field-uid: 2
            kMode10GigLan:
              x-field-uid: 3
          x-field-uid: 2
        enable_simulate_cable_disconnect:
          description: |-
            TBD
          type: boolean
          x-field-uid: 3
        enable_transparent_dynamic_rate_change:
          description: |-
            TBD
          type: boolean
          x-field-uid: 4
        intrinsic_latency_adjustment:
          description: |-
            TBD
          type: boolean
          x-field-uid: 5
        instrumentation_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kModeEndOfFrame:
              x-field-uid: 1
            kModeFloating:
              x-field-uid: 2
          x-field-uid: 6
    SplitPacketGroup.ConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        group_id_offset:
          description: |-
            The offset, in bytes, from the starting point set in groupIdOffsetBaseType.
          type: integer
          format: int32
          x-field-uid: 1
        group_id_offset_base_type:
          description: |-
            Where in the packet to start the offset for the PGID split section.
          type: string
          x-enum:
            kOffsetStartOfFrame:
              x-field-uid: 1
            kOffsetFromSignature:
              x-field-uid: 2
          x-field-uid: 2
        group_id_width:
          description: |-
            The number of bytes in the PGID split section.
          type: integer
          format: int32
          x-field-uid: 3
        group_id_mask:
          description: |-
            The bit mask for the PGID group.
          type: integer
          format: int32
          x-field-uid: 4
    Port.TxLaneMappingType:
      description: |-
        TBD
      type: object
      properties:
        mapping:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.TxLaneList"
          x-field-uid: 1
    Stream.WeightedPairDataType:
      description: |-
        TBD
      type: object
      properties:
        length_weight:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 1
        length_size_min:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
        length_size_max:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 3
    Stream.SpecialProtocolInfoType:
      description: |-
        TBD
      type: object
      properties:
        enable_isl:
          description: |-
            Indicates that ISL header is present in the stack.
          type: boolean
          x-field-uid: 1
        enable_data_mangling:
          description: |-
            Data mangling is enabled for the frame.
          type: boolean
          x-field-uid: 2
        enable_fcoe:
          description: |-
            Indicates that FCOE header is present in the stack.
          type: boolean
          x-field-uid: 3
        force_valid_f_co_e_size:
          description: |-
            If true, the frame size of all packets of the stream will be forced   by hw to be a multiple of 4, if FCoE header is present.
          type: boolean
          x-field-uid: 4
        enable_vntag:
          description: |-
            Indicates that Vntag protocol is present in the stack.
          type: boolean
          x-field-uid: 5
        fcoe_eof:
          description: |-
            User-configurable value from the FCOE trailer.
          type: integer
          format: int32
          x-field-uid: 6
        fcoe_reserved1:
          description: |-
            User-configurable value from the FCOE trailer.
          type: integer
          format: int32
          x-field-uid: 7
        fcoe_reserved2:
          description: |-
            User-configurable value from the FCOE trailer.
          type: integer
          format: int32
          x-field-uid: 8
        fcoe_reserved3:
          description: |-
            User-configurable value from the FCOE trailer.
          type: integer
          format: int32
          x-field-uid: 9
    Stream.RangeListConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.StreamRangeListSettingList"
          x-field-uid: 1
    Stream.KillBitListConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.KillBitListSettingList"
          x-field-uid: 1
    Udf.RangeListType:
      description: |-
        TBD
      type: object
      properties:
        udf_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.UdfId"
          x-field-uid: 1
        init_values:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.UdfMVDataType"
          x-field-uid: 2
        repeat_count_values:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.UdfMVDataType"
          x-field-uid: 3
        step_values:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.UdfMVDataType"
          x-field-uid: 4
    Udf.UdfConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        udf_list:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.UdfList"
          x-field-uid: 1
    Stream.ValueListConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.StreamValueListSettingList"
          x-field-uid: 1
    TableUdf.ColumnDataType:
      description: |-
        TBD
      type: object
      properties:
        col_id:
          description: |-
            The column within row that this data applies to.
          $ref: "#/components/schemas/TableUdf.ColId"
          x-field-uid: 1
        value:
          description: |-
            The data for the cell identified by this column within row.
          type: string
          x-field-uid: 2
    DebugTopology.DebugPortConnectionInfo:
      description: |-
        TBD
      type: object
      properties:
        target_address:
          description: |-
            TBD
          type: string
          x-field-uid: 1
        target_port:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
        proxy_address:
          description: |-
            TBD
          type: string
          x-field-uid: 3
        proxy_port:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 4
    PFType.GapPrecisionTimeType:
      description: |-
        Model interpacket gap with precision and allow a diversity of units of measurement.
      type: object
      properties:
        duration:
          description: |-
            TBD
          type: number
          format: double
          x-field-uid: 1
        units:
          description: |-
            TBD
          type: string
          x-enum:
            kGapNanoSeconds:
              x-field-uid: 1
            kGapClockTicks:
              x-field-uid: 2
            kGapBytes:
              x-field-uid: 3
          x-field-uid: 2
    Stream.TsnQbvGateConfigType:
      description: |-
        Used to map a stream to a particular IEEE 802.1Qbv Gate.
      type: object
      properties:
        enabled:
          description: |-
            Specifies if the feature is enabled or not.   If the value is true, then this need to be configured.
          type: boolean
          x-field-uid: 1
        qbv_gate:
          description: |-
            Specifies which 802.1Qbv Gate the stream is mapped to.
          type: string
          x-enum:
            kTsnQbvGate0:
              x-field-uid: 1
            kTsnQbvGate1:
              x-field-uid: 2
            kTsnQbvGate2:
              x-field-uid: 3
            kTsnQbvGate3:
              x-field-uid: 4
            kTsnQbvGate4:
              x-field-uid: 5
            kTsnQbvGate5:
              x-field-uid: 6
            kTsnQbvGate6:
              x-field-uid: 7
            kTsnQbvGate7:
              x-field-uid: 8
          x-field-uid: 2
    Stream.QuadGaussianPacketDataType:
      description: |-
        TBD
      type: object
      properties:
        length_weight:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.QuadGaussianFractionalDataType"
          x-field-uid: 1
        length_width:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.QuadGaussianFractionalDataType"
          x-field-uid: 2
        length_center:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.QuadGaussianFractionalDataType"
          x-field-uid: 3
    DebugTopology.InterceptorInfo:
      description: |-
        TBD
      type: object
      properties:
        interceptor_running_mode:
          description: |-
            TBD
          type: string
          x-enum:
            kLiveDebuggingOnIxNClient:
              x-field-uid: 1
            kOffClientDebugWithIxN:
              x-field-uid: 2
            kOfflineDebugWithCHM:
              x-field-uid: 3
          x-field-uid: 1
        interceptor_user_name:
          description: |-
            TBD
          type: string
          x-field-uid: 2
    Port.PfcPriorityQueueType:
      description: |-
        TBD
      type: object
      properties:
        enable:
          description: |-
            TBD
          type: boolean
          x-field-uid: 1
        queue:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.PfcPriorityQueueChannelSet"
          x-field-uid: 2
    Port.PauseConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        flow_control:
          description: |-
            TBD
          type: string
          x-enum:
            kDisabled:
              x-field-uid: 1
            kIEEE8023x:
              x-field-uid: 2
            kIEEE8021Qbb:
              x-field-uid: 3
          x-field-uid: 1
        directed_address:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 2
        multicast_pause_address:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 3
    Udf.UdfValueListSettingType:
      description: |-
        TBD
      type: object
      properties:
        length:
          description: |-
            Number of values in the value list.
          type: integer
          format: int32
          x-field-uid: 1
        repeat_count:
          description: |-
            Number of times to repeat the value list.
          type: integer
          format: int32
          x-field-uid: 2
        entry_size:
          description: |-
            Size of the value list entry in bytes.   Default: 0 (for legacy support to represent 4 byte word)   Valid numbers: 0,1,2,4 on HW supporting entries smaller than 4.
          type: integer
          format: int32
          x-field-uid: 3
        region_offset:
          description: |-
            Validated offset from the beginning of the shared VL memory region.   Ignored for HW not supporting shared VL memory region.   Default: -1 i.e. UINT_MAX to indicate invalid offset. 0 is a valid offset.
          type: integer
          format: int32
          x-field-uid: 4
        reuse_vl:
          description: |-
            Reuse a configured value list.
          type: boolean
          x-field-uid: 5
        source_stream_id:
          description: |-
            Stream Id of the source value list.
          type: integer
          format: int32
          x-field-uid: 6
        source_udf_id:
          description: |-
            Udf Id of the source value list.
          type: integer
          format: int32
          x-field-uid: 7
        start_entry_offset:
          description: |-
            Number of entries in configured VL after which the list is to be reused.
          type: integer
          format: int32
          x-field-uid: 8
        num_entries:
          description: |-
            The number of Value List entries that will be shared starting from startEntryOffset.
          type: integer
          format: int32
          x-field-uid: 9
        use_nested_counter:
          description: |-
            Enable usage of the nested counter to loop through the value list.
          type: boolean
          x-field-uid: 10
    Stream.RandomQuadGaussianControlType:
      description: |-
        TBD
      type: object
      properties:
        quadgaussian:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.QuadGaussianDataList"
          x-field-uid: 1
    Stream.LengthInsertionType:
      description: |-
        TBD
      type: object
      properties:
        value:
          description: |-
            Value is subtracted from the packet length and the result is placed at the overlay offset.
          type: integer
          format: int32
          x-field-uid: 1
        offset:
          description: |-
            Offset where we need to overlay the corrected length result.
          type: integer
          format: int32
          x-field-uid: 2
    Stream.ProtocolHeaderInfoType:
      description: |-
        TBD
      type: object
      properties:
        name:
          description: |-
            TBD
          type: string
          x-field-uid: 1
        description:
          description: |-
            TBD
          type: string
          x-field-uid: 2
        start:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 3
        length:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 4
        has_checksum:
          description: |-
            TBD
          type: boolean
          x-field-uid: 5
        has_length_insertion:
          description: |-
            TBD
          type: boolean
          x-field-uid: 6
        checksum_data:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.ChecksumDataType"
          x-field-uid: 7
        length_insertion:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.LengthInsertionType"
          x-field-uid: 8
        has_ip_type:
          description: |-
            TBD
          type: boolean
          x-field-uid: 9
        ip_type:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 10
    Udf.CounterSettingType:
      description: |-
        TBD
      type: object
      properties:
        repeat:
          description: |-
            The counter is incremented or decremented the number of times based   on this option. Set to zero to repeat indefinitely.
          type: integer
          format: int64
          x-field-uid: 1
        init_val:
          description: |-
            The initial value of the counter.
          type: integer
          format: int64
          x-field-uid: 2
        step:
          description: |-
            The step size for counter increment/decrement.
          type: integer
          format: int64
          x-field-uid: 3
        enable_cascade:
          description: |-
            If this option is set to true, then the UDF counter is not reset   with the start of each stream, but rather continues counting   from the ending value of the previous stream.
          type: boolean
          x-field-uid: 4
        continuously_counting:
          description: |-
            If this option is set to true, then the repeat value is ignored   and the UDF does not reset to initVal but continuously counts.
          type: boolean
          x-field-uid: 5
    Capture.ExpressionElementType:
      description: |-
        TBD
      type: object
      properties:
        element_kind:
          description: |-
            The expressionElementKind indicates the type of element stored   in the ExpressionElement.    The element stored can either be an operator or a pattern id.
          type: string
          x-enum:
            kOperator:
              x-field-uid: 1
            kPattern:
              x-field-uid: 2
          x-field-uid: 1
        operator_logic:
          description: |-
            TBD
          type: string
          x-enum:
            kNotPattern:
              x-field-uid: 1
            kAndPattern:
              x-field-uid: 2
            kOrPattern:
              x-field-uid: 3
            kXorPattern:
              x-field-uid: 4
            kNandPattern:
              x-field-uid: 5
            kNorPattern:
              x-field-uid: 6
          x-field-uid: 2
        pattern_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.CapturePatternId"
          x-field-uid: 3
    MacSec.RxMGIDConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        enable_mgid0:
          description: |-
            TBD
          type: boolean
          x-field-uid: 1
        split_mgid_config0:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.SplitMGIDConfigurationType"
          x-field-uid: 2
        enable_mgid1:
          description: |-
            TBD
          type: boolean
          x-field-uid: 3
        split_mgid_config1:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.SplitMGIDConfigurationType"
          x-field-uid: 4
    MacSec.RxMacSecUDSConfigType:
      description: |-
        TBD
      type: object
      properties:
        macsec_uds_id:
          description: |-
            Id for the UDS that is configured.   Minumum value of the id = 0   Maximum value of the id = 7   A maximum of 8 UDS can be configured.
          type: integer
          format: int32
          x-field-uid: 1
        stat_type:
          description: |-
            TBD
          type: string
          x-enum:
            kInOK:
              x-field-uid: 1
            kInBad:
              x-field-uid: 2
            kInBadTag:
              x-field-uid: 3
            kInLate:
              x-field-uid: 4
            kInNotValid:
              x-field-uid: 5
            kInInvalid:
              x-field-uid: 6
            kInValidated:
              x-field-uid: 7
            kInDecrypted:
              x-field-uid: 8
          x-field-uid: 2
        is_byte_count:
          description: |-
            0 = Packet Count Mode   1 = Byte Count Mode
          type: boolean
          x-field-uid: 3
        multicast_as_dev_id:
          description: |-
            0 = False   1 = True
          type: boolean
          x-field-uid: 4
        broadcast_as_dev_id:
          description: |-
            0 = False   1 = True
          type: boolean
          x-field-uid: 5
    Port.TxLaneConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        tx_lane_mapping:
          description: |-
            TBD
          $ref: "#/components/schemas/Port.TxLaneMappingType"
          x-field-uid: 1
    MacSec.TxMacSecSaKeyStatusType:
      description: |-
        TBD
      type: object
      properties:
        sc_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.SecureChannelId"
          x-field-uid: 1
        key0_status:
          description: |-
            TBD
          type: string
          x-enum:
            kExpired:
              x-field-uid: 1
            kActive:
              x-field-uid: 2
            kFresh:
              x-field-uid: 3
          x-field-uid: 2
        key1_status:
          description: |-
            TBD
          type: string
          x-enum:
            kExpired:
              x-field-uid: 1
            kActive:
              x-field-uid: 2
            kFresh:
              x-field-uid: 3
          x-field-uid: 3
    Port.TxRxSyncIntervalConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        enable_tx_rx_sync:
          description: |-
            TBD
          type: boolean
          x-field-uid: 1
        tx_rx_sync_interval:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.MilliSecondsType"
          x-field-uid: 2
    RateMonitoring.ConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        enable_jitter_filter:
          description: |-
            TBD
          type: boolean
          x-field-uid: 1
        filter_window:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
        rate_monitoring_threshold:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 3
        from_pgid:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 4
        to_pgid:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 5
    Udf.RandomSettingType:
      description: |-
        TBD
      type: object
      properties:
        mask_select:
          description: |-
            This is a bit mask that enables, on a bit-by-bit basis, use   of the absolute counter value bits as defined by mMaskval option   Not supported for Kokamo.
          type: integer
          format: int64
          x-field-uid: 1
        mask_val:
          description: |-
            A bit mask of absolute values for this UDF counter. It is used in   association with the mMaskselect; bits must be set 'on' or the   bits in mMaskselect is ignored.   Not supported for Kokamo.
          type: integer
          format: int64
          x-field-uid: 2
        random_type:
          description: |-
            If this option is set to kRandomRepeatableWithSeed, then the sequence of random    values in this UDF will be the same after each traffic start, provided the    initRandomSeed is the same at each traffic start; if the initRandomSeed is not the same,   then a different sequence will be used.  The startVal will be ignored in this case.   If this option is set to kRandomRepeatableWithStartVal, then the first value generated   by the random generator will always be startVal.  The sequence of random    values in this UDF will be the same after each traffic start, provided the    startVal is the same at each traffic start, and the initrandomSeed is also the   same at each traffic start; if the startVal or initRandomSeed are not the same   as the previous value at the start of the next test, then a different sequence    will be used.   If this option is set to kRandomNonRepeatable, then the sequence of random values    in this UDF will almost always be different after each traffic start; the    initRandomSeed and startVal will be ignored in this case.   Not supported for Jasper and Mazuma.
          type: string
          x-enum:
            kRandomNonRepeatable:
              x-field-uid: 1
            kRandomRepeatableWithSeed:
              x-field-uid: 2
            kRandomRepeatableWithStartVal:
              x-field-uid: 3
          x-field-uid: 3
        init_random_seed:
          description: |-
            Initial random seed.   Must be a non-zero value.   In use only when randomType is set to kRandomRepeatableWithSeed or kRandomRepeatableWithStartVal.   Not supported for Jasper and Mazuma.
          type: integer
          format: int64
          x-field-uid: 4
        start_val:
          description: |-
            First value that will be generated in the random range.   Must be greater than or equal to minVal and less than or equal to maxVal.   In use only when randomType is set to kRandomRepeatableWithStartVal.   Not supported for Jasper and Mazuma.
          type: integer
          format: int64
          x-field-uid: 5
        min_val:
          description: |-
            Minimum value in the random range for this UDF and this stream.   Not supported for Jasper and Mazuma.
          type: integer
          format: int64
          x-field-uid: 6
        max_val:
          description: |-
            Maximum value in the random range for this UDF and this stream.   This value is used as the replacement value if a skip value is encountered.   Not supported for Jasper and Mazuma.
          type: integer
          format: int64
          x-field-uid: 7
    TableUdf.RowId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 1
    TableUdf.ColumnMVDataType:
      description: |-
        TBD
      type: object
      properties:
        column_id:
          description: |-
            The column index, 0 based.
          $ref: "#/components/schemas/TableUdf.ColId"
          x-field-uid: 1
        data:
          description: |-
            MultiValue containing data for the entire column
          type: string
          x-field-uid: 2
    Udf.KillBitSettingType:
      description: |-
        TBD
      type: object
      properties:
        length:
          description: |-
            Number of bits in the kill bit list.
          type: integer
          format: int32
          x-field-uid: 1
    Feature.FeatureType:
      description: |-
        A port feature is seen as a static (not changing over the lifetime of a port) description of the kinds of behaviours the port might be capable of over its lifetime. A port feature does not describe the state of a port. Changes to the state of a port are modelled as events, and are not described in this part of the interface. A port feature is modelled as a name and some attributes. The names of the features themselves are not specified in this interface to avoid having to alter the interface each time there is a new feature added, an old one removed, etc. Any feature that is not supported will not be named. In other words the absence of a feature means that the HW is simply incapable of supporting that feature. Supposing that the HW supports the feature, Name will yield the name of the feature, and Attribute will yield a list of attribute names and dependencies describing the characteristics of the feature. Each attribute comprises the name of that attribute, and a dependency expression (possibly empty) that specifies the constraint under which the attribute holds. A concise way of writing a capability is as a comma separated n-tuple surrounding with left and right square brackets:     [ Name, ( Attribute1, Dependency1 ), ( Attribute2, Dependency2 ) ]     [ Name, ( Attribute, Dependency ) ]     [ Name, ( Attribute ) ]     [ Name ] Commas and backslashes may be quoted with a backslash. The second example shows an attribute with no dependencies, and the third example shows a capability with no attributes or dependencies. Some simple capabilities:     [ CARDTYPE, ( 180 ) ]     [ CARDMODES, ( 10 100 1000 ) ] A capability with dependencies:     [ CAPTURESIZE, ( 10, CARDMODE.100 ) ]     # The capture size is 10 if the card mode is 100.
      type: object
      properties:
        name:
          description: |-
            TBD
          type: string
          x-field-uid: 1
        attribute:
          description: |-
            TBD
          $ref: "#/components/schemas/Feature.AttributeList"
          x-field-uid: 2
    MacSec.TxSaKeyConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        sc_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.SecureChannelId"
          x-field-uid: 1
        enable_key0:
          description: |-
            TBD
          type: boolean
          x-field-uid: 2
        key0:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.KeyConfigurationType"
          x-field-uid: 3
        enable_key1:
          description: |-
            TBD
          type: boolean
          x-field-uid: 4
        key1:
          description: |-
            TBD
          $ref: "#/components/schemas/MacSec.KeyConfigurationType"
          x-field-uid: 5
        an0:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 6
        an1:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 7
        sci:
          description: |-
            sci is part of SC configuration so ideally it should be present in Tx SC configuration   like its present in Rx SC Configuration. But Tx sci has been added as a member of    this Tx key configuration here, the reason being, in FPGA doc, Tx SCI and ssci/salt share   the same memory region of Key configuration and therefore separating Tx SCI and Tx ssci/salt    would create problems in programming these controls in FPGA. Hence Tx SCI has been added as a    member of Tx Key configuration. On the other hand, Rx SCI shares a completely separate memory    region in FPGA, hence Rx SCI has been added as a member of Rx SCI configuration    following the ideal scenario.
          type: string
          x-field-uid: 8
        toggle_key:
          description: |-
            True = Switch from the active key to the inactive key, and make the newly inactive key stale.   False = Don't switch to active key.
          type: boolean
          x-field-uid: 9
    PFType.ErrorType:
      description: |-
        Errors are modelled as some text that describes the error condition.
      type: object
      properties:
        text:
          description: |-
            TBD
          type: string
          x-field-uid: 1
    Stream.StreamControlType:
      description: |-
        TBD
      type: object
      properties:
        dma:
          description: |-
            This determines the behaviour of the stream flow.
          type: string
          x-enum:
            kContPacket:
              x-field-uid: 1
            kContBurst:
              x-field-uid: 2
            kStopStream:
              x-field-uid: 3
            kAdvance:
              x-field-uid: 4
            kGotoFirst:
              x-field-uid: 5
            kFirstLoopCount:
              x-field-uid: 6
            kFixedBurstCount:
              x-field-uid: 7
          x-field-uid: 1
        return_to_id:
          description: |-
            Configures the stream ID to which the control loops.
          $ref: "#/components/schemas/IdType.StreamId"
          x-field-uid: 2
        loop_count:
          description: |-
            Number of times to begin transmission of the first stream in the   list when dmaFirstLoopCount is set.
          type: integer
          format: int32
          x-field-uid: 3
        num_bursts:
          description: |-
            Number of bursts in the stream. If dmaContBurst or dmaContPacket   is set this option is ignored.
          type: integer
          format: int64
          x-field-uid: 4
        num_frames:
          description: |-
            Number of maximum frames in the stream. If dmaContPacket is set   this option is ignored.
          type: integer
          format: int64
          x-field-uid: 5
        priority_group:
          description: |-
            Specifies the priority group of the stream.
          type: string
          x-enum:
            kPriorityGroup0:
              x-field-uid: 1
            kPriorityGroup1:
              x-field-uid: 2
            kPriorityGroup2:
              x-field-uid: 3
            kPriorityGroup3:
              x-field-uid: 4
            kPriorityGroup4:
              x-field-uid: 5
            kPriorityGroup5:
              x-field-uid: 6
            kPriorityGroup6:
              x-field-uid: 7
            kPriorityGroup7:
              x-field-uid: 8
            kPriorityGroup8:
              x-field-uid: 9
            kPriorityGroupControl:
              x-field-uid: 10
          x-field-uid: 6
        tsn_qbv_gate_config:
          description: |-
            Contains a structure which specifies the gate the stream   is mapped to and whether the feature is enabled or not.
          $ref: "#/components/schemas/Stream.TsnQbvGateConfigType"
          x-field-uid: 7
        async_int_enable:
          description: |-
            When this option is set to false, asynchronous transmit events   cannot interrupt the stream. The asynchronous event is logged   and is invoked as soon as a synchronous stream permits it. Note   that only one asynchronous event of a type stream is logged,   that is, if the same timer expired twice, only one asynchronous   event is logged due to that counter.
          type: boolean
          x-field-uid: 8
        adjust_mask:
          description: |-
            TBD
          type: string
          x-enum:
            kGapNone:
              x-field-uid: 1
            kGapFrame:
              x-field-uid: 2
            kGapBurst:
              x-field-uid: 3
            kGapStream:
              x-field-uid: 4
            kAdjustFrameSizeFixed:
              x-field-uid: 5
            kAdjustFrameSizeMin:
              x-field-uid: 6
            kAdjustFrameSizeMax:
              x-field-uid: 7
            kAdjustNumFrames:
              x-field-uid: 8
          x-field-uid: 9
        enable_incr_frame_burst_override:
          description: |-
            Enable the packet burst override for increment frame mode.
          type: boolean
          x-field-uid: 10
        enable_source_interface:
          description: |-
            If true, then the MAC address and source IP address associated with   an interface is used instead of the sa value and IP source address.   The particular interface to be used is specified in   interfaceDescription.
          type: boolean
          x-field-uid: 11
        enable_statistic:
          description: |-
            If true, then per-stream transmit statistics are enabled.
          type: boolean
          x-field-uid: 12
        enable_suspend:
          description: |-
            If true, then stream suspend command is enabled.
          type: boolean
          x-field-uid: 13
        rx_trigger_enable:
          description: |-
            When set to true, the transmit engine waits for a pulse from   the receiver to start the stream.
          type: boolean
          x-field-uid: 14
        start_tx_delay:
          description: |-
            Configure the delay before starting this stream.
          $ref: "#/components/schemas/Stream.TxDelayType"
          x-field-uid: 15
    Stream.ProtocolHeaderInfoListType:
      description: |-
        TBD
      type: object
      properties:
        special_protocol_info:
          description: |-
            Special (global) protocol header info relevant to special cases.   (unfortunately this is how HW does it)
          $ref: "#/components/schemas/Stream.SpecialProtocolInfoType"
          x-field-uid: 1
        protocol_header:
          description: |-
            List of all the protocol header infos relevant to checksum/length insertion.
          $ref: "#/components/schemas/Stream.ProtocolHeaderInfoList"
          x-field-uid: 2
    IdType.SlotId:
      description: |-
        TBD
      type: object
      properties:
        id:
          description: |-
            The SlotID is used by a VM machine to know the number of the slot   in which it was inserted in a virtual chassis.
          type: integer
          format: int32
          x-field-uid: 1
    PFType.PicoSecondsType:
      description: |-
        Model a duration in picoseconds using a plain integer. This allows signed durations up to 4 months to expressed.
      type: object
      properties:
        pico_seconds:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 1
    PFType.OwnerType:
      description: |-
        Model the owner of a port. A name is used to identify the owner of a port.
      type: object
      properties:
        port:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.PortId"
          x-field-uid: 1
        name:
          description: |-
            TBD
          type: string
          x-field-uid: 2
    Stream.SrcAddrControlType:
      description: |-
        TBD
      type: object
      properties:
        src_addr:
          description: |-
            Initial source MAC address assigned to this stream.
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 1
        src_addr_mask_select:
          description: |-
            Selects the bits in the 48-bit source MAC address that are to be   masked by the value set by mDstAddrMaskValue.
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 2
        src_addr_mask_value:
          description: |-
            Value of the masked bits selected by mSrcAddrMaskSelect in the   source MAC address.
          $ref: "#/components/schemas/PFType.MacAddressType"
          x-field-uid: 3
        src_addr_repeat_counter:
          description: |-
            Specifies how the source MAC address is incremented or decremented.
          type: string
          x-enum:
            kIncrement:
              x-field-uid: 1
            kContIncrement:
              x-field-uid: 2
            kDecrement:
              x-field-uid: 3
            kContDecrement:
              x-field-uid: 4
            kIdle:
              x-field-uid: 5
            kCtrRandom:
              x-field-uid: 6
            kDstAddrArp:
              x-field-uid: 7
            kContJitterTestPattern:
              x-field-uid: 8
            kContRandomTestPattern:
              x-field-uid: 9
          x-field-uid: 4
        src_addr_step:
          description: |-
            If mSrcRepeatCounter is set to increment, contIncrement, decrement, or   contDecrement, and the load module supports an arbitrary step size,   then this is the value to increment/decrement the destination address   by for each address repetition.
          type: integer
          format: int64
          x-field-uid: 5
        num_src_addr:
          description: |-
            Number of source MAC addresses the stream is going to   be transmitted to. Must be more than 1 to set the mSrcAddrRepeatCounter   to anything other than idle
          type: integer
          format: int64
          x-field-uid: 6
        enable_src_continue_from_last_value:
          description: |-
            If true, then the MAC Source Address of the stream will not reset   when returning to a stream ID, but continue from the previous stream.
          type: boolean
          x-field-uid: 7
    PFType.PartsPerMillionType:
      description: |-
        Model a ppm ratio using a fixed point representation. A value of 80.1 ppm would be represented as (80 + 100000 / 1e6).
      type: object
      properties:
        ppm:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 1
        micro_ppm:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
    Udf.UdfType:
      description: |-
        TBD
      type: object
      properties:
        udf_id:
          description: |-
            The identifier of the UDF to which the following configuration   pertains.
          $ref: "#/components/schemas/IdType.UdfId"
          x-field-uid: 1
        enable:
          description: |-
            If this option is set to true, then this UDF counter is inserted   into the frame.
          type: boolean
          x-field-uid: 2
        chain_from:
          description: |-
            Select what UDF the current UDF should chain from. When this   is set to something other than -1 (invalid ID) or mUdfId,   the UDF stays in its initial value until the UDF it is   chained from reaches its terminating value.
          $ref: "#/components/schemas/IdType.UdfId"
          x-field-uid: 3
        bit_offset:
          description: |-
            Sets the offset into the frame in bits of the position of   the UDF. Note that DA and SA use the fixed offsets at 0 and 48,   respectively. This option applies to all values of mCounterMode.
          type: integer
          format: int32
          x-field-uid: 4
        udf_size:
          description: |-
            Sets the UDF field size (in bits). This must be a value from 1-32   and is only supported on certain cards in certain modes.
          type: integer
          format: int32
          x-field-uid: 5
        cascade_type:
          description: |-
            Indicates the source of the initial value for the counter. The   initial value for the first enabled stream always comes from   mInitval.
          type: string
          x-enum:
            kUdfCascadeNone:
              x-field-uid: 1
            kUdfCascadeFromPrevious:
              x-field-uid: 2
            kUdfCascadeFromSelf:
              x-field-uid: 3
          x-field-uid: 6
        counter_mode:
          description: |-
            The mode of operation of the counter. Not all modes are supported   by all port types and not all modes are supported by all UDFs   on a port. A stream set fails if any enabled UDF does not support a   mCounterMode. The availability of a particular mode on a particular   UDF can be checked with the port isValidFeature command
          type: string
          x-enum:
            kUdfCounterMode:
              x-field-uid: 1
            kUdfRandomMode:
              x-field-uid: 2
            kUdfValueListMode:
              x-field-uid: 3
            kUdfNestedCounterMode:
              x-field-uid: 4
            kUdfKillBitMode:
              x-field-uid: 5
            kUdfIPv4Mode:
              x-field-uid: 6
            kUdfRangeListMode:
              x-field-uid: 7
          x-field-uid: 7
        counter_setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.CounterSettingType"
          x-field-uid: 8
        i_pv4_setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.IPv4SettingType"
          x-field-uid: 9
        nested_counter_setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.NestedCounterSettingType"
          x-field-uid: 10
        value_list_setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.UdfValueListSettingType"
          x-field-uid: 11
        random_setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.RandomSettingType"
          x-field-uid: 12
        kill_bit_setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.KillBitSettingType"
          x-field-uid: 13
        enable_index_mode:
          description: |-
            If this option is set to true, the index mode is enabled.
          type: boolean
          x-field-uid: 14
        skip_value_setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.SkipValueSettingType"
          x-field-uid: 15
        skip_synchronization_setting:
          description: |-
            TBD
          $ref: "#/components/schemas/Udf.SkipSynchronizationSettingType"
          x-field-uid: 16
    PFType.GapTimeType:
      description: |-
        Model interpacket gap and allow a diversity of units of measurement.
      type: object
      properties:
        duration:
          description: |-
            TBD
          type: integer
          format: int64
          x-field-uid: 1
        units:
          description: |-
            TBD
          type: string
          x-enum:
            kGapNanoSeconds:
              x-field-uid: 1
            kGapClockTicks:
              x-field-uid: 2
            kGapBytes:
              x-field-uid: 3
          x-field-uid: 2
    Stream.InterBurstGapControlType:
      description: |-
        TBD
      type: object
      properties:
        enable_ibg:
          description: |-
            TBD
          type: boolean
          x-field-uid: 1
        ibg:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.GapTimeType"
          x-field-uid: 2
        ibg_precise:
          description: |-
            TBD
          $ref: "#/components/schemas/PFType.GapPrecisionTimeType"
          x-field-uid: 3
    Stream.BackgroundDataSettingType:
      description: |-
        TBD
      type: object
      properties:
        stream_id:
          description: |-
            TBD
          $ref: "#/components/schemas/IdType.StreamId"
          x-field-uid: 1
        background_data:
          description: |-
            TBD
          $ref: "#/components/schemas/Stream.BackgroundDataType"
          x-field-uid: 2
    Udf.NestedCounterSettingType:
      description: |-
        TBD
      type: object
      properties:
        init_val:
          description: |-
            The initial value of the counter.
          type: integer
          format: int64
          x-field-uid: 1
        value_repetitions:
          description: |-
            The number of times each value is repeated for each iteration   of the inner loop. This number must be at least 1.
          type: integer
          format: int64
          x-field-uid: 2
        value_step:
          description: |-
            The amount to increment value for each repitition. (NOTE: hardware   has 3 loops, network doesn't increment innermost, just repeats value,   this exposes the innermost increment)
          type: integer
          format: int64
          x-field-uid: 3
        inner_step:
          description: |-
            The step size between inner loop iterations. Each iteration   of the inner loop requires one complete set of value   repetitions.
          type: integer
          format: int64
          x-field-uid: 4
        inner_repetitions:
          description: |-
            The number iterations of the inner loop to form one cycle of   the inner loop. This number must be at least 1.
          type: integer
          format: int64
          x-field-uid: 5
        outer_step:
          description: |-
            The step size between out loop iterations. Each iteration   of the outer loop requires one complete cycle of the inner loop.
          type: integer
          format: int64
          x-field-uid: 6
        outer_repetitions:
          description: |-
            The number of times the outer loop is repeated. Repeat indefinitely   if this number is zero.
          type: integer
          format: int64
          x-field-uid: 7
        continuously_counting:
          description: |-
            If this option is set to true, then the outerRepetitions value   is ignored and the UDF does not reset to initVal but continuously   counts.
          type: boolean
          x-field-uid: 8
    DebugTopology.DebugPortTopologyInfo:
      description: |-
        TBD
      type: object
      properties:
        chassis_name_or_ip:
          description: |-
            TBD
          type: string
          x-field-uid: 1
        card:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 2
        port:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 3
        port_type:
          description: |-
            TBD
          type: string
          x-field-uid: 4
        management_ip:
          description: |-
            TBD
          type: string
          x-field-uid: 5
        is_virtual_port:
          description: |-
            TBD
          type: boolean
          x-field-uid: 6
        port_index:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 7
    DebugTopology.DebugPortInfoWithUniqueId:
      description: |-
        TBD
      type: object
      properties:
        unique_port_id:
          description: |-
            TBD
          type: integer
          format: int32
          x-field-uid: 1
        port_info:
          description: |-
            TBD
          $ref: "#/components/schemas/DebugTopology.DebugPortInfo"
          x-field-uid: 2
    RxAutoInstrumentation.ConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        start_scan_offset:
          description: |-
            The Start Scan Offset.
          type: integer
          format: int32
          x-field-uid: 1
        signature:
          description: |-
            The Signature Value.
          type: string
          x-field-uid: 2
        mask:
          description: |-
            The Signature Mask.
          type: string
          x-field-uid: 3
        misdirected_packet_mask:
          description: |-
            The Misdirected Packet Mask.
          type: string
          x-field-uid: 4
        ignore_misdirected_signature:
          description: |-
            When this feature is enabled, If Rx FPGA Engine receives a misdirected packet whose signature's last bit is 1, it will neither update the Misdirected stats for that packet nor send it to PCPU or PG engine. Instead it updates AIS_Misdirected Ignore Statistics for that packet.
          type: boolean
          x-field-uid: 5
    TableUdf.TableUdfConfigurationType:
      description: |-
        TBD
      type: object
      properties:
        rows:
          description: |-
            Number of rows to allocate.
          type: integer
          format: int32
          x-field-uid: 1
        columns:
          description: |-
            Each column defines the locations within a packet that are to   be modified.
          $ref: "#/components/schemas/TableUdf.ColumnSettingList"
          x-field-uid: 2
    Capture.eContinuousFilter:
      type: string
      x-enum:
        kCaptureAll:
          x-field-uid: 1
        kUseCaptureFilter:
          x-field-uid: 2
    Stream.eRateMode:
      type: string
      x-enum:
        kStreamRateModeGap:
          x-field-uid: 1
        kStreamRateModePercentRate:
          x-field-uid: 2
        kStreamRateModeFps:
          x-field-uid: 3
        kStreamRateModeBps:
          x-field-uid: 4
    Capture.eFilterExpressionParserType:
      type: string
      x-enum:
        kSimpleExpressionParser:
          x-field-uid: 1
        kComplexExpressionParser:
          x-field-uid: 2
        kTokaidoExpressionParser:
          x-field-uid: 3
    PFType.eGapUnit:
      type: string
      x-enum:
        kGapNanoSeconds:
          x-field-uid: 1
        kGapClockTicks:
          x-field-uid: 2
        kGapBytes:
          x-field-uid: 3
    Stream.eDma:
      type: string
      x-enum:
        kContPacket:
          x-field-uid: 1
        kContBurst:
          x-field-uid: 2
        kStopStream:
          x-field-uid: 3
        kAdvance:
          x-field-uid: 4
        kGotoFirst:
          x-field-uid: 5
        kFirstLoopCount:
          x-field-uid: 6
        kFixedBurstCount:
          x-field-uid: 7
    Stream.eFcsError:
      type: string
      x-enum:
        kStreamErrorGood:
          x-field-uid: 1
        kStreamErrorAlignment:
          x-field-uid: 2
        kStreamErrorDribble:
          x-field-uid: 3
        kStreamErrorBadCRC:
          x-field-uid: 4
        kStreamErrorNoCRC:
          x-field-uid: 5
    Stream.eTsnQbvGate:
      type: string
      x-enum:
        kTsnQbvGate0:
          x-field-uid: 1
        kTsnQbvGate1:
          x-field-uid: 2
        kTsnQbvGate2:
          x-field-uid: 3
        kTsnQbvGate3:
          x-field-uid: 4
        kTsnQbvGate4:
          x-field-uid: 5
        kTsnQbvGate5:
          x-field-uid: 6
        kTsnQbvGate6:
          x-field-uid: 7
        kTsnQbvGate7:
          x-field-uid: 8
    Capture.eTimestampPrecision:
      type: string
      x-enum:
        kMicroSec:
          x-field-uid: 1
        kNanoSec:
          x-field-uid: 2
    PacketGroup.ePGIDStatMode:
      type: string
      x-enum:
        k4KStatMode:
          x-field-uid: 1
        k32KStatMode:
          x-field-uid: 2
    Port.eInstrumentationMode:
      type: string
      x-enum:
        kModeEndOfFrame:
          x-field-uid: 1
        kModeFloating:
          x-field-uid: 2
    PacketGroup.eSequenceCheckingMode:
      type: string
      x-enum:
        kSeqThreshold:
          x-field-uid: 1
        kSeqMultiSwitchedPath:
          x-field-uid: 2
        kSeqAdvTracking:
          x-field-uid: 3
    Udf.eCounterMode:
      type: string
      x-enum:
        kUdfCounterMode:
          x-field-uid: 1
        kUdfRandomMode:
          x-field-uid: 2
        kUdfValueListMode:
          x-field-uid: 3
        kUdfNestedCounterMode:
          x-field-uid: 4
        kUdfKillBitMode:
          x-field-uid: 5
        kUdfIPv4Mode:
          x-field-uid: 6
        kUdfRangeListMode:
          x-field-uid: 7
    Udf.eRandomType:
      type: string
      x-enum:
        kRandomNonRepeatable:
          x-field-uid: 1
        kRandomRepeatableWithSeed:
          x-field-uid: 2
        kRandomRepeatableWithStartVal:
          x-field-uid: 3
    Capture.ePacketFormat:
      type: string
      x-enum:
        kRaw:
          x-field-uid: 1
        kPcap:
          x-field-uid: 2
    Stream.eRandomSizeType:
      type: string
      x-enum:
        kRandomSizeOff:
          x-field-uid: 1
        kRandomSizeUniform:
          x-field-uid: 2
        kRandomSizeWeightedPair:
          x-field-uid: 3
        kRandomSizeQuadGuassian:
          x-field-uid: 4
        kRandomSizeCisco:
          x-field-uid: 5
        kRandomSizeImix:
          x-field-uid: 6
        kRandomSizeTolly:
          x-field-uid: 7
        kRandomSizeRprTriModal:
          x-field-uid: 8
        kRandomSizeRprQuadModal:
          x-field-uid: 9
    Stream.ePatternType:
      type: string
      x-enum:
        kRandom:
          x-field-uid: 1
        kIncrByte:
          x-field-uid: 2
        kIncrWord:
          x-field-uid: 3
        kDecrByte:
          x-field-uid: 4
        kDecrWord:
          x-field-uid: 5
        kPattern:
          x-field-uid: 6
        kRepeatPattern:
          x-field-uid: 7
    Port.eRxTxMode:
      type: string
      x-enum:
        kGigNormal:
          x-field-uid: 1
        kGigLoopback:
          x-field-uid: 2
        kGigCableDisconnect:
          x-field-uid: 3
    Stream.eAddressRepeatCounter:
      type: string
      x-enum:
        kIncrement:
          x-field-uid: 1
        kContIncrement:
          x-field-uid: 2
        kDecrement:
          x-field-uid: 3
        kContDecrement:
          x-field-uid: 4
        kIdle:
          x-field-uid: 5
        kCtrRandom:
          x-field-uid: 6
        kDstAddrArp:
          x-field-uid: 7
        kContJitterTestPattern:
          x-field-uid: 8
        kContRandomTestPattern:
          x-field-uid: 9
    Stream.eFragCount:
      type: string
      x-enum:
        kFragCount0:
          x-field-uid: 1
        kFragCount1:
          x-field-uid: 2
        kFragCount2:
          x-field-uid: 3
        kFragCount3:
          x-field-uid: 4
        kFragCountAuto:
          x-field-uid: 5
    Capture.eExpressionKind:
      type: string
      x-enum:
        kUds:
          x-field-uid: 1
        kTrigger:
          x-field-uid: 2
        kFilter:
          x-field-uid: 3
    PacketGroup.eGroupIdMode:
      type: string
      x-enum:
        kPacketGroupCustom:
          x-field-uid: 1
        kPacketGroupDscp:
          x-field-uid: 2
        kPacketGroupIpV6TrafficClass:
          x-field-uid: 3
        kPacketGroupMplsExp:
          x-field-uid: 4
        kPacketGroupSplit:
          x-field-uid: 5
    PacketGroup.eTimeStampMode:
      type: string
      x-enum:
        kTimeStampForEntirePGID:
          x-field-uid: 1
        kUpdateTimeStampOnError:
          x-field-uid: 2
    Server.LinkValues:
      type: string
      x-enum:
        Down:
          x-field-uid: 1
        Up:
          x-field-uid: 2
        Loopback:
          x-field-uid: 3
        ForceLinkUp:
          x-field-uid: 4
    StatCatalog.eStatType:
      type: string
      x-enum:
        kDefault:
          x-field-uid: 1
        kArray:
          x-field-uid: 2
    Capture.eBeforeTriggerFilter:
      type: string
      x-enum:
        kCaptureAll:
          x-field-uid: 1
        kCaptureNone:
          x-field-uid: 2
        kUseCaptureFilter:
          x-field-uid: 3
    Port.ePrimarySecondary:
      type: string
      x-enum:
        kNegotiateEither:
          x-field-uid: 1
        kNegotiatePortPrimary:
          x-field-uid: 2
        kNegotiatePortSecondary:
          x-field-uid: 3
    Port.eTxMode:
      type: string
      x-enum:
        kPacketStreams:
          x-field-uid: 1
        kPacketFlows:
          x-field-uid: 2
        kAdvancedScheduler:
          x-field-uid: 3
        kEcho:
          x-field-uid: 4
    Server.CPUStatusValues:
      type: string
      x-enum:
        Down:
          x-field-uid: 1
        Ready:
          x-field-uid: 2
    StatCatalog.eValueType:
      type: string
      x-enum:
        kCounter:
          x-field-uid: 1
        kString:
          x-field-uid: 2
        kPair:
          x-field-uid: 3
    Stream.eChecksumError:
      type: string
      x-enum:
        kNoError:
          x-field-uid: 1
        kBadChecksum:
          x-field-uid: 2
    Capture.eExpressionElementKind:
      type: string
      x-enum:
        kOperator:
          x-field-uid: 1
        kPattern:
          x-field-uid: 2
    Port.eLoopback:
      type: string
      x-enum:
        kNormal:
          x-field-uid: 1
        kLoopback:
          x-field-uid: 2
        kLineLoopback:
          x-field-uid: 3
    Port.ePortMode:
      type: string
      x-enum:
        kModeEthernet:
          x-field-uid: 1
        kMode10GigWan:
          x-field-uid: 2
        kMode10GigLan:
          x-field-uid: 3
    Stream.ePriorityGroup:
      type: string
      x-enum:
        kPriorityGroup0:
          x-field-uid: 1
        kPriorityGroup1:
          x-field-uid: 2
        kPriorityGroup2:
          x-field-uid: 3
        kPriorityGroup3:
          x-field-uid: 4
        kPriorityGroup4:
          x-field-uid: 5
        kPriorityGroup5:
          x-field-uid: 6
        kPriorityGroup6:
          x-field-uid: 7
        kPriorityGroup7:
          x-field-uid: 8
        kPriorityGroup8:
          x-field-uid: 9
        kPriorityGroupControl:
          x-field-uid: 10
    Port.eDuplex:
      type: string
      x-enum:
        kHalf:
          x-field-uid: 1
        kFull:
          x-field-uid: 2
    Server.CaptureValues:
      type: string
      x-enum:
        None:
          x-field-uid: 1
        Capture:
          x-field-uid: 2
    Server.ePulseGenerator:
      type: string
      x-enum:
        kNoPulse:
          x-field-uid: 1
        kPulse:
          x-field-uid: 2
    Capture.eRXSharedStats:
      type: string
      x-enum:
        kInvalidDelimiter:
          x-field-uid: 1
        kInvalidFrames:
          x-field-uid: 2
        kInvalidSize:
          x-field-uid: 3
        kNormalSizeBadFCCRC:
          x-field-uid: 4
        kNormalSizeGoodFCCRC:
          x-field-uid: 5
        kUndersizeBadFCCRC:
          x-field-uid: 6
        kUndersizeGoodFCCRC:
          x-field-uid: 7
        kValidFrames:
          x-field-uid: 8
    PacketGroup.eDelayVariationMode:
      type: string
      x-enum:
        kDelayVariationWithSequenceErrors:
          x-field-uid: 1
        kDelayVariationWithLatencyMinMax:
          x-field-uid: 2
        kDelayVariationWithLatencyAvg:
          x-field-uid: 3
    Port.eDataCenterMode:
      type: string
      x-enum:
        kNoMapping:
          x-field-uid: 1
        kOnePriorityMapping:
          x-field-uid: 2
        kTwoPriorityMapping:
          x-field-uid: 3
        kFourPriorityMapping:
          x-field-uid: 4
        kEightPriorityMapping:
          x-field-uid: 5
    Port.eAdvertiseAbilities:
      type: string
      x-enum:
        kNone:
          x-field-uid: 1
        kSend:
          x-field-uid: 2
        kSendAndReceive:
          x-field-uid: 3
        kSendAndOrReceive:
          x-field-uid: 4
    Port.eRxMode:
      type: string
      x-enum:
        kCapture:
          x-field-uid: 1
        kDataIntegrity:
          x-field-uid: 2
        kFirstTimeStamp:
          x-field-uid: 3
        kSequenceChecking:
          x-field-uid: 4
        kWidePacketGroup:
          x-field-uid: 5
        kPrbs:
          x-field-uid: 6
        kRateMonitoring:
          x-field-uid: 7
        kPerFlowErrorStats:
          x-field-uid: 8
    Capture.eDirection:
      type: string
      x-enum:
        kRx:
          x-field-uid: 1
        kTx:
          x-field-uid: 2
        kBidirectional:
          x-field-uid: 3
    Capture.ePatternKind:
      type: string
      x-enum:
        kSrcAddrPattern:
          x-field-uid: 1
        kDstAddrPattern:
          x-field-uid: 2
        kDataPattern:
          x-field-uid: 3
        kQoSPattern:
          x-field-uid: 4
    Capture.eCaptureMode:
      type: string
      x-enum:
        kContinuousMode:
          x-field-uid: 1
        kTriggerMode:
          x-field-uid: 2
    Stream.ePseudoHeaderFieldType:
      type: string
      x-enum:
        kFixed:
          x-field-uid: 1
        kLengthInsertion:
          x-field-uid: 2
        kPartOfBackgroundData:
          x-field-uid: 3
    Port.eTxClockMode:
      type: string
      x-enum:
        kInternal:
          x-field-uid: 1
        kExternal:
          x-field-uid: 2
    Stream.eState:
      type: string
      x-enum:
        kInactive:
          x-field-uid: 1
        kActive:
          x-field-uid: 2
    Stream.eFrameSizeType:
      type: string
      x-enum:
        kSizeFixed:
          x-field-uid: 1
        kSizeRandom:
          x-field-uid: 2
        kSizeIncr:
          x-field-uid: 3
        kSizeAuto:
          x-field-uid: 4
    Server.eEvent:
      type: string
      x-enum:
        kOwnership:
          x-field-uid: 1
        kLink:
          x-field-uid: 2
        kCPUStatus:
          x-field-uid: 3
        kCapture:
          x-field-uid: 4
        kTransmit:
          x-field-uid: 5
        kStreamRate:
          x-field-uid: 6
        kLineSpeed:
          x-field-uid: 7
    Server.eNTPState:
      type: string
      x-enum:
        kNotRunning:
          x-field-uid: 1
        kRunningNotTrusted:
          x-field-uid: 2
        kRunningTrusted:
          x-field-uid: 3
    SplitPacketGroup.eSplitPgidOffsetBaseTypes:
      type: string
      x-enum:
        kOffsetStartOfFrame:
          x-field-uid: 1
        kOffsetFromSignature:
          x-field-uid: 2
    Stream.eGapControlMode:
      type: string
      x-enum:
        kStreamGapControlFixed:
          x-field-uid: 1
        kStreamGapControlAverage:
          x-field-uid: 2
    Stream.eSMDType:
      type: string
      x-enum:
        kExpress:
          x-field-uid: 1
        kAutoSMD:
          x-field-uid: 2
        kAutoSMDS:
          x-field-uid: 3
        kAutoSMDC:
          x-field-uid: 4
        kSMDS0:
          x-field-uid: 5
        kSMDS1:
          x-field-uid: 6
        kSMDS2:
          x-field-uid: 7
        kSMDS3:
          x-field-uid: 8
        kSMDC0:
          x-field-uid: 9
        kSMDC1:
          x-field-uid: 10
        kSMDC2:
          x-field-uid: 11
        kSMDC3:
          x-field-uid: 12
        kVerify:
          x-field-uid: 13
        kRespond:
          x-field-uid: 14
        kInvalid:
          x-field-uid: 15
    Capture.eCaptureState:
      type: string
      x-enum:
        kCaptureStopped:
          x-field-uid: 1
        kCaptureStarted:
          x-field-uid: 2
    DebugTopology.eInterceptorRunningMode:
      type: string
      x-enum:
        kLiveDebuggingOnIxNClient:
          x-field-uid: 1
        kOffClientDebugWithIxN:
          x-field-uid: 2
        kOfflineDebugWithCHM:
          x-field-uid: 3
    MacSec.eAesModeAlgorithm:
      type: string
      x-enum:
        kGcm128:
          x-field-uid: 1
        kGcm256:
          x-field-uid: 2
        kXpn128:
          x-field-uid: 3
        kXpn256:
          x-field-uid: 4
    Udf.eCascadeType:
      type: string
      x-enum:
        kUdfCascadeNone:
          x-field-uid: 1
        kUdfCascadeFromPrevious:
          x-field-uid: 2
        kUdfCascadeFromSelf:
          x-field-uid: 3
    Stream.eIfgType:
      type: string
      x-enum:
        kGapFixed:
          x-field-uid: 1
        kGapRandom:
          x-field-uid: 2
    Stream.eChecksumType:
      type: string
      x-enum:
        kEthernetFCS:
          x-field-uid: 1
        kL23Checksum:
          x-field-uid: 2
        kL4Checksum:
          x-field-uid: 3
    Stream.eDataIntegrityMode:
      type: string
      x-enum:
        kAuto:
          x-field-uid: 1
        kNumberOfBytesFromEndOfFrame:
          x-field-uid: 2
        kPayloadLength:
          x-field-uid: 3
    Stream.eCRCType:
      type: string
      x-enum:
        kmCRC:
          x-field-uid: 1
        kFCS:
          x-field-uid: 2
    MacSec.eMacSecStandardStatType:
      type: string
      x-enum:
        kInOK:
          x-field-uid: 1
        kInBad:
          x-field-uid: 2
        kInBadTag:
          x-field-uid: 3
        kInLate:
          x-field-uid: 4
        kInNotValid:
          x-field-uid: 5
        kInInvalid:
          x-field-uid: 6
        kInValidated:
          x-field-uid: 7
        kInDecrypted:
          x-field-uid: 8
    Port.ePCPUFilterControl:
      type: string
      x-enum:
        kEnable:
          x-field-uid: 1
        kDisable:
          x-field-uid: 2
        kNoAction:
          x-field-uid: 3
    Server.ePulseAction:
      type: string
      x-enum:
        kStartTx:
          x-field-uid: 1
        kStopTx:
          x-field-uid: 2
        kFreeze:
          x-field-uid: 3
        kStartCapture:
          x-field-uid: 4
        kStopCapture:
          x-field-uid: 5
        kPauseTx:
          x-field-uid: 6
        kResumeTx:
          x-field-uid: 7
        kClearTimestamp:
          x-field-uid: 8
        kStartSyncStats:
          x-field-uid: 9
        kStopSyncStats:
          x-field-uid: 10
        kStartTxGcl:
          x-field-uid: 11
        kStartRxGcl:
          x-field-uid: 12
    Capture.eLogic:
      type: string
      x-enum:
        kNotPattern:
          x-field-uid: 1
        kAndPattern:
          x-field-uid: 2
        kOrPattern:
          x-field-uid: 3
        kXorPattern:
          x-field-uid: 4
        kNandPattern:
          x-field-uid: 5
        kNorPattern:
          x-field-uid: 6
    Feature.ePortProcessorType:
      type: string
      x-enum:
        kPPC405:
          x-field-uid: 1
        kPPC750:
          x-field-uid: 2
        kSH4:
          x-field-uid: 3
        kWSX86:
          x-field-uid: 4
        kMIPS:
          x-field-uid: 5
        kOCTEON:
          x-field-uid: 6
        kX86_64:
          x-field-uid: 7
        kOCTEON2:
          x-field-uid: 8
        kUnknown:
          x-field-uid: 9
    Port.eFlowControl:
      type: string
      x-enum:
        kDisabled:
          x-field-uid: 1
        kIEEE8023x:
          x-field-uid: 2
        kIEEE8021Qbb:
          x-field-uid: 3
    Server.TransmitValues:
      type: string
      x-enum:
        None:
          x-field-uid: 1
        Transmitting:
          x-field-uid: 2
    Stream.eTxDelay:
      type: string
      x-enum:
        kNanoSeconds:
          x-field-uid: 1
        kBytes:
          x-field-uid: 2
        kTicks:
          x-field-uid: 3
    Capture.eAfterTriggerFilter:
      type: string
      x-enum:
        kCaptureAll:
          x-field-uid: 1
        kUseTriggerFilter:
          x-field-uid: 2
        kUseCaptureFilter:
          x-field-uid: 3
    Capture.eErrorMatch:
      type: string
      x-enum:
        kAnyFrame:
          x-field-uid: 1
        kErrGoodFrame:
          x-field-uid: 2
        kErrBadCRC:
          x-field-uid: 3
        kErrBadFrame:
          x-field-uid: 4
        kErrAnySequenceError:
          x-field-uid: 5
        kErrSmallSequenceError:
          x-field-uid: 6
        kErrBigSequenceError:
          x-field-uid: 7
        kErrReverseSequenceError:
          x-field-uid: 8
        kErrDataIntegrityError:
          x-field-uid: 9
        kErrAnyIpTcpUdpChecksumError:
          x-field-uid: 10
        kErrReverseDuplicatePacket:
          x-field-uid: 11
        kErrSequenceGap:
          x-field-uid: 12
        kErrCdlErrors:
          x-field-uid: 13
        kErrFCoEInvalidFrame:
          x-field-uid: 14
    PacketGroup.eMeasurementMode:
      type: string
      x-enum:
        kPacketGroupModeLatency:
          x-field-uid: 1
        kPacketGroupModeInterArrivalTime:
          x-field-uid: 2
        kPacketGroupModeDelayVariation:
          x-field-uid: 3
    Port.ePmaClock:
      type: string
      x-enum:
        kAutoNegotiate:
          x-field-uid: 1
        kPrimary:
          x-field-uid: 2
        kSecondary:
          x-field-uid: 3
    Server.eTimedAction:
      type: string
      x-enum:
        kStartTx:
          x-field-uid: 1
        kStopTx:
          x-field-uid: 2
        kStartSyncStats:
          x-field-uid: 3
        kStopSyncStats:
          x-field-uid: 4
        kStartRxCapture:
          x-field-uid: 5
        kStopRxCapture:
          x-field-uid: 6
        kStartTxCapture:
          x-field-uid: 7
        kStopTxCapture:
          x-field-uid: 8
        kStartTxGcl:
          x-field-uid: 9
        kStartRxGcl:
          x-field-uid: 10
    Capture.eCircuitList:
      type: string
      x-enum:
        kAnyCircuit:
          x-field-uid: 1
        kCircuitList:
          x-field-uid: 2
    MacSec.eMacSecScKeyState:
      type: string
      x-enum:
        kExpired:
          x-field-uid: 1
        kActive:
          x-field-uid: 2
        kFresh:
          x-field-uid: 3
    PacketGroup.eLatencyControl:
      type: string
      x-enum:
        kCutThrough:
          x-field-uid: 1
        kStoreAndForward:
          x-field-uid: 2
        kInterArrivalJitter:
          x-field-uid: 3
        kFirstInLastOut:
          x-field-uid: 4
        kLastInLastOut:
          x-field-uid: 5
    Stream.eAdjustMask:
      type: string
      x-enum:
        kGapNone:
          x-field-uid: 1
        kGapFrame:
          x-field-uid: 2
        kGapBurst:
          x-field-uid: 3
        kGapStream:
          x-field-uid: 4
        kAdjustFrameSizeFixed:
          x-field-uid: 5
        kAdjustFrameSizeMin:
          x-field-uid: 6
        kAdjustFrameSizeMax:
          x-field-uid: 7
        kAdjustNumFrames:
          x-field-uid: 8
    Capture.eAnchor:
      type: string
      x-enum:
        kStartOfFrame:
          x-field-uid: 1
        kStartOfIP:
          x-field-uid: 2
        kStartOfProtocol:
          x-field-uid: 3
    Feature.ePortCapabilityValues:
      type: string
      x-enum:
        kControl:
          x-field-uid: 1
        kData:
          x-field-uid: 2
        kAdjustableFrameSize:
          x-field-uid: 3
        kDynamicRateChange:
          x-field-uid: 4
        kRegularPacketGroup:
          x-field-uid: 5
        kWidePacketGroup:
          x-field-uid: 6
        kDataCaptureCapable:
          x-field-uid: 7
        kCopper:
          x-field-uid: 8
        kFiber:
          x-field-uid: 9
        kGenericEthernetMode:
          x-field-uid: 10
        kTenGigLANMode:
          x-field-uid: 11
        kTenGigWANMode:
          x-field-uid: 12
        kATMMode:
          x-field-uid: 13
        kPOSMode:
          x-field-uid: 14
        kOC48POSMode:
          x-field-uid: 15
        kOC192POSMode:
          x-field-uid: 16
        kHalf10:
          x-field-uid: 17
        kFull10:
          x-field-uid: 18
        kHalf100:
          x-field-uid: 19
        kFull100:
          x-field-uid: 20
        kFull1000:
          x-field-uid: 21
        kCanSimulateLinkState:
          x-field-uid: 22
        kReducedFeature:
          x-field-uid: 23
        kSequenceNumberUdf:
          x-field-uid: 24
        kOAM:
          x-field-uid: 25
        kTxRxSyncStats:
          x-field-uid: 26
        kDataCenterMode:
          x-field-uid: 27
        kRTP:
          x-field-uid: 28
        kTsoLro:
          x-field-uid: 29
        kSelectablePcpuKernel:
          x-field-uid: 30
        kClockModeCard:
          x-field-uid: 31
        kIncrementFrameBurstOverride:
          x-field-uid: 32
        kLasi:
          x-field-uid: 33
        kModeL7:
          x-field-uid: 34
        kFortyGigLANMode:
          x-field-uid: 35
        kHundredGigLANMode:
          x-field-uid: 36
        kFloatingTimeStamp:
          x-field-uid: 37
        kWanIFSStretch:
          x-field-uid: 38
        kModeFCoEOffload:
          x-field-uid: 39
        kTenGigabitLANMode:
          x-field-uid: 40
        kFourtyGigabitLANMode:
          x-field-uid: 41
        kOneGigabitMode:
          x-field-uid: 42
        kTwoGigabitMode:
          x-field-uid: 43
        kFourGigabitMode:
          x-field-uid: 44
        kEightGigabitMode:
          x-field-uid: 45
        kDynamicValuelist:
          x-field-uid: 46
        kTLU:
          x-field-uid: 47
        kSuspendResume:
          x-field-uid: 48
        kRxLatencyBin:
          x-field-uid: 49
        kVirtualPort:
          x-field-uid: 50
        kPTP:
          x-field-uid: 51
        kWidePacketGroupAlwaysEnabled:
          x-field-uid: 52
        kFeaturePFCPauseResponseDelay:
          x-field-uid: 53
        kMultiNicPerOS:
          x-field-uid: 54
        kIxN2XMode:
          x-field-uid: 55
        kIxiaCustomKernel:
          x-field-uid: 56
        kKillbit:
          x-field-uid: 57
        kDynamicBackgroundUpdate:
          x-field-uid: 58
        kFeatureVlan0x9300:
          x-field-uid: 59
        kRxFiltersSupported:
          x-field-uid: 60
        kRxPatternFilter1Supported:
          x-field-uid: 61
        kRxPatternFilter2Supported:
          x-field-uid: 62
        kRxPatternFilter3Supported:
          x-field-uid: 63
        kRxPatternFilter4Supported:
          x-field-uid: 64
        kRxPatternFilter5Supported:
          x-field-uid: 65
        kRxPatternFilter6Supported:
          x-field-uid: 66
        kRxPatternFilterPallettePatternFlexible:
          x-field-uid: 67
        kRxPatternFilterPallettePatternOffsetFromIp:
          x-field-uid: 68
        kRxPatternFilterPallettePatternOffsetFromProtocol:
          x-field-uid: 69
        kRxPatternFilterPallettePatternOffsetFromSonet:
          x-field-uid: 70
        kTxFrequencyDeviation:
          x-field-uid: 71
        kPortClusters:
          x-field-uid: 72
        kOneGEAggregate:
          x-field-uid: 73
        kTenGEAggregate:
          x-field-uid: 74
        kDataCenterFourPriority:
          x-field-uid: 75
        kPacketLengthInsertion:
          x-field-uid: 76
        kFortyGEAggregate:
          x-field-uid: 77
        kTransmitExtendedTimestamp:
          x-field-uid: 78
        kSetWhistlerAggregated:
          x-field-uid: 79
        kSupportMKDualMode:
          x-field-uid: 80
        kSupportFilterExpressionString:
          x-field-uid: 81
        kSupportOtn:
          x-field-uid: 82
        kSupportOtnAggregation:
          x-field-uid: 83
        kSupportOtnOdu2Otu2:
          x-field-uid: 84
        kSupportOtnOdu2eOtu2e:
          x-field-uid: 85
        kSupportOtnOdu3Otu3:
          x-field-uid: 86
        kSupportOtnOdu4Otu4:
          x-field-uid: 87
        kAdvancedStreamContBurst:
          x-field-uid: 88
        kResourceGroupEx:
          x-field-uid: 89
        kResourceGroupPPM:
          x-field-uid: 90
        kSupportBPSMode:
          x-field-uid: 91
        kSupportLineLoopback:
          x-field-uid: 92
        kEmissionLoweringProtocol:
          x-field-uid: 93
        kProcessorType:
          x-field-uid: 94
        kPortKernelVersion:
          x-field-uid: 95
        kPortPlatformVersion:
          x-field-uid: 96
        kPortType:
          x-field-uid: 97
    MacSec.eMacSecTrafficType:
      type: string
      x-enum:
        kIngress:
          x-field-uid: 1
        kEgress:
          x-field-uid: 2
